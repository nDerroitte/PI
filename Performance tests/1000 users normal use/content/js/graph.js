/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 286.0, "minX": 0.0, "maxY": 3827.0, "series": [{"data": [[0.0, 286.0], [0.1, 303.0], [0.2, 305.0], [0.3, 305.0], [0.4, 307.0], [0.5, 308.0], [0.6, 337.0], [0.7, 360.0], [0.8, 403.0], [0.9, 407.0], [1.0, 408.0], [1.1, 410.0], [1.2, 501.0], [1.3, 508.0], [1.4, 511.0], [1.5, 516.0], [1.6, 522.0], [1.7, 522.0], [1.8, 524.0], [1.9, 527.0], [2.0, 528.0], [2.1, 529.0], [2.2, 530.0], [2.3, 530.0], [2.4, 531.0], [2.5, 532.0], [2.6, 533.0], [2.7, 533.0], [2.8, 533.0], [2.9, 534.0], [3.0, 534.0], [3.1, 534.0], [3.2, 535.0], [3.3, 536.0], [3.4, 536.0], [3.5, 536.0], [3.6, 537.0], [3.7, 538.0], [3.8, 538.0], [3.9, 538.0], [4.0, 538.0], [4.1, 540.0], [4.2, 540.0], [4.3, 540.0], [4.4, 541.0], [4.5, 541.0], [4.6, 542.0], [4.7, 542.0], [4.8, 542.0], [4.9, 543.0], [5.0, 543.0], [5.1, 544.0], [5.2, 544.0], [5.3, 544.0], [5.4, 545.0], [5.5, 545.0], [5.6, 546.0], [5.7, 547.0], [5.8, 548.0], [5.9, 549.0], [6.0, 549.0], [6.1, 550.0], [6.2, 550.0], [6.3, 550.0], [6.4, 551.0], [6.5, 551.0], [6.6, 551.0], [6.7, 552.0], [6.8, 553.0], [6.9, 554.0], [7.0, 554.0], [7.1, 555.0], [7.2, 556.0], [7.3, 556.0], [7.4, 557.0], [7.5, 558.0], [7.6, 559.0], [7.7, 560.0], [7.8, 561.0], [7.9, 563.0], [8.0, 568.0], [8.1, 568.0], [8.2, 570.0], [8.3, 571.0], [8.4, 573.0], [8.5, 573.0], [8.6, 574.0], [8.7, 574.0], [8.8, 575.0], [8.9, 575.0], [9.0, 576.0], [9.1, 577.0], [9.2, 577.0], [9.3, 578.0], [9.4, 579.0], [9.5, 580.0], [9.6, 580.0], [9.7, 581.0], [9.8, 581.0], [9.9, 581.0], [10.0, 581.0], [10.1, 582.0], [10.2, 582.0], [10.3, 582.0], [10.4, 583.0], [10.5, 583.0], [10.6, 583.0], [10.7, 583.0], [10.8, 584.0], [10.9, 584.0], [11.0, 584.0], [11.1, 584.0], [11.2, 584.0], [11.3, 585.0], [11.4, 585.0], [11.5, 586.0], [11.6, 586.0], [11.7, 586.0], [11.8, 586.0], [11.9, 586.0], [12.0, 586.0], [12.1, 586.0], [12.2, 587.0], [12.3, 587.0], [12.4, 588.0], [12.5, 588.0], [12.6, 588.0], [12.7, 588.0], [12.8, 588.0], [12.9, 588.0], [13.0, 589.0], [13.1, 589.0], [13.2, 590.0], [13.3, 590.0], [13.4, 590.0], [13.5, 590.0], [13.6, 590.0], [13.7, 591.0], [13.8, 591.0], [13.9, 591.0], [14.0, 591.0], [14.1, 591.0], [14.2, 592.0], [14.3, 592.0], [14.4, 592.0], [14.5, 592.0], [14.6, 592.0], [14.7, 592.0], [14.8, 592.0], [14.9, 592.0], [15.0, 592.0], [15.1, 593.0], [15.2, 593.0], [15.3, 593.0], [15.4, 593.0], [15.5, 593.0], [15.6, 593.0], [15.7, 594.0], [15.8, 594.0], [15.9, 594.0], [16.0, 594.0], [16.1, 594.0], [16.2, 594.0], [16.3, 595.0], [16.4, 595.0], [16.5, 595.0], [16.6, 595.0], [16.7, 595.0], [16.8, 595.0], [16.9, 595.0], [17.0, 596.0], [17.1, 596.0], [17.2, 596.0], [17.3, 596.0], [17.4, 596.0], [17.5, 596.0], [17.6, 596.0], [17.7, 597.0], [17.8, 597.0], [17.9, 597.0], [18.0, 597.0], [18.1, 597.0], [18.2, 597.0], [18.3, 597.0], [18.4, 597.0], [18.5, 597.0], [18.6, 597.0], [18.7, 597.0], [18.8, 598.0], [18.9, 598.0], [19.0, 598.0], [19.1, 598.0], [19.2, 598.0], [19.3, 598.0], [19.4, 598.0], [19.5, 598.0], [19.6, 598.0], [19.7, 598.0], [19.8, 599.0], [19.9, 599.0], [20.0, 599.0], [20.1, 599.0], [20.2, 599.0], [20.3, 599.0], [20.4, 599.0], [20.5, 599.0], [20.6, 600.0], [20.7, 600.0], [20.8, 600.0], [20.9, 600.0], [21.0, 600.0], [21.1, 600.0], [21.2, 600.0], [21.3, 600.0], [21.4, 600.0], [21.5, 601.0], [21.6, 601.0], [21.7, 601.0], [21.8, 601.0], [21.9, 601.0], [22.0, 601.0], [22.1, 602.0], [22.2, 602.0], [22.3, 602.0], [22.4, 602.0], [22.5, 602.0], [22.6, 602.0], [22.7, 602.0], [22.8, 603.0], [22.9, 603.0], [23.0, 603.0], [23.1, 603.0], [23.2, 603.0], [23.3, 603.0], [23.4, 603.0], [23.5, 603.0], [23.6, 603.0], [23.7, 604.0], [23.8, 604.0], [23.9, 604.0], [24.0, 604.0], [24.1, 604.0], [24.2, 604.0], [24.3, 605.0], [24.4, 605.0], [24.5, 605.0], [24.6, 605.0], [24.7, 605.0], [24.8, 605.0], [24.9, 605.0], [25.0, 605.0], [25.1, 606.0], [25.2, 606.0], [25.3, 606.0], [25.4, 606.0], [25.5, 606.0], [25.6, 607.0], [25.7, 607.0], [25.8, 607.0], [25.9, 607.0], [26.0, 607.0], [26.1, 607.0], [26.2, 607.0], [26.3, 607.0], [26.4, 607.0], [26.5, 607.0], [26.6, 608.0], [26.7, 608.0], [26.8, 608.0], [26.9, 608.0], [27.0, 608.0], [27.1, 608.0], [27.2, 608.0], [27.3, 609.0], [27.4, 609.0], [27.5, 609.0], [27.6, 610.0], [27.7, 610.0], [27.8, 610.0], [27.9, 610.0], [28.0, 610.0], [28.1, 610.0], [28.2, 610.0], [28.3, 610.0], [28.4, 611.0], [28.5, 611.0], [28.6, 611.0], [28.7, 611.0], [28.8, 611.0], [28.9, 611.0], [29.0, 611.0], [29.1, 611.0], [29.2, 611.0], [29.3, 611.0], [29.4, 612.0], [29.5, 612.0], [29.6, 612.0], [29.7, 612.0], [29.8, 612.0], [29.9, 612.0], [30.0, 612.0], [30.1, 612.0], [30.2, 612.0], [30.3, 612.0], [30.4, 612.0], [30.5, 612.0], [30.6, 612.0], [30.7, 612.0], [30.8, 612.0], [30.9, 612.0], [31.0, 613.0], [31.1, 613.0], [31.2, 613.0], [31.3, 613.0], [31.4, 613.0], [31.5, 613.0], [31.6, 613.0], [31.7, 613.0], [31.8, 613.0], [31.9, 613.0], [32.0, 613.0], [32.1, 613.0], [32.2, 613.0], [32.3, 613.0], [32.4, 613.0], [32.5, 613.0], [32.6, 613.0], [32.7, 613.0], [32.8, 613.0], [32.9, 613.0], [33.0, 613.0], [33.1, 613.0], [33.2, 613.0], [33.3, 613.0], [33.4, 614.0], [33.5, 614.0], [33.6, 614.0], [33.7, 614.0], [33.8, 614.0], [33.9, 614.0], [34.0, 614.0], [34.1, 614.0], [34.2, 614.0], [34.3, 614.0], [34.4, 614.0], [34.5, 614.0], [34.6, 614.0], [34.7, 614.0], [34.8, 614.0], [34.9, 614.0], [35.0, 614.0], [35.1, 614.0], [35.2, 614.0], [35.3, 614.0], [35.4, 614.0], [35.5, 614.0], [35.6, 614.0], [35.7, 614.0], [35.8, 614.0], [35.9, 614.0], [36.0, 614.0], [36.1, 614.0], [36.2, 614.0], [36.3, 614.0], [36.4, 614.0], [36.5, 615.0], [36.6, 615.0], [36.7, 615.0], [36.8, 615.0], [36.9, 615.0], [37.0, 615.0], [37.1, 615.0], [37.2, 615.0], [37.3, 615.0], [37.4, 615.0], [37.5, 615.0], [37.6, 615.0], [37.7, 615.0], [37.8, 615.0], [37.9, 615.0], [38.0, 615.0], [38.1, 616.0], [38.2, 616.0], [38.3, 616.0], [38.4, 616.0], [38.5, 616.0], [38.6, 617.0], [38.7, 617.0], [38.8, 617.0], [38.9, 617.0], [39.0, 618.0], [39.1, 619.0], [39.2, 619.0], [39.3, 620.0], [39.4, 621.0], [39.5, 621.0], [39.6, 622.0], [39.7, 622.0], [39.8, 622.0], [39.9, 622.0], [40.0, 622.0], [40.1, 622.0], [40.2, 623.0], [40.3, 623.0], [40.4, 623.0], [40.5, 624.0], [40.6, 624.0], [40.7, 624.0], [40.8, 624.0], [40.9, 625.0], [41.0, 625.0], [41.1, 625.0], [41.2, 625.0], [41.3, 626.0], [41.4, 627.0], [41.5, 627.0], [41.6, 628.0], [41.7, 628.0], [41.8, 628.0], [41.9, 629.0], [42.0, 629.0], [42.1, 630.0], [42.2, 630.0], [42.3, 630.0], [42.4, 631.0], [42.5, 631.0], [42.6, 631.0], [42.7, 633.0], [42.8, 633.0], [42.9, 633.0], [43.0, 633.0], [43.1, 634.0], [43.2, 634.0], [43.3, 634.0], [43.4, 636.0], [43.5, 636.0], [43.6, 636.0], [43.7, 637.0], [43.8, 638.0], [43.9, 638.0], [44.0, 638.0], [44.1, 640.0], [44.2, 640.0], [44.3, 641.0], [44.4, 641.0], [44.5, 642.0], [44.6, 642.0], [44.7, 643.0], [44.8, 643.0], [44.9, 645.0], [45.0, 646.0], [45.1, 646.0], [45.2, 647.0], [45.3, 647.0], [45.4, 648.0], [45.5, 648.0], [45.6, 650.0], [45.7, 651.0], [45.8, 652.0], [45.9, 653.0], [46.0, 653.0], [46.1, 653.0], [46.2, 655.0], [46.3, 657.0], [46.4, 657.0], [46.5, 659.0], [46.6, 659.0], [46.7, 660.0], [46.8, 660.0], [46.9, 661.0], [47.0, 663.0], [47.1, 665.0], [47.2, 665.0], [47.3, 665.0], [47.4, 667.0], [47.5, 667.0], [47.6, 668.0], [47.7, 668.0], [47.8, 669.0], [47.9, 669.0], [48.0, 670.0], [48.1, 671.0], [48.2, 672.0], [48.3, 673.0], [48.4, 674.0], [48.5, 675.0], [48.6, 675.0], [48.7, 676.0], [48.8, 676.0], [48.9, 677.0], [49.0, 677.0], [49.1, 678.0], [49.2, 680.0], [49.3, 680.0], [49.4, 681.0], [49.5, 682.0], [49.6, 682.0], [49.7, 683.0], [49.8, 684.0], [49.9, 685.0], [50.0, 685.0], [50.1, 686.0], [50.2, 688.0], [50.3, 689.0], [50.4, 689.0], [50.5, 690.0], [50.6, 691.0], [50.7, 692.0], [50.8, 692.0], [50.9, 693.0], [51.0, 694.0], [51.1, 695.0], [51.2, 695.0], [51.3, 696.0], [51.4, 696.0], [51.5, 696.0], [51.6, 697.0], [51.7, 699.0], [51.8, 700.0], [51.9, 700.0], [52.0, 701.0], [52.1, 701.0], [52.2, 702.0], [52.3, 702.0], [52.4, 704.0], [52.5, 705.0], [52.6, 705.0], [52.7, 706.0], [52.8, 707.0], [52.9, 708.0], [53.0, 708.0], [53.1, 709.0], [53.2, 709.0], [53.3, 710.0], [53.4, 712.0], [53.5, 712.0], [53.6, 712.0], [53.7, 713.0], [53.8, 713.0], [53.9, 714.0], [54.0, 714.0], [54.1, 714.0], [54.2, 714.0], [54.3, 714.0], [54.4, 714.0], [54.5, 715.0], [54.6, 715.0], [54.7, 715.0], [54.8, 715.0], [54.9, 715.0], [55.0, 715.0], [55.1, 715.0], [55.2, 715.0], [55.3, 716.0], [55.4, 716.0], [55.5, 716.0], [55.6, 716.0], [55.7, 716.0], [55.8, 716.0], [55.9, 716.0], [56.0, 716.0], [56.1, 716.0], [56.2, 716.0], [56.3, 716.0], [56.4, 716.0], [56.5, 716.0], [56.6, 716.0], [56.7, 716.0], [56.8, 716.0], [56.9, 717.0], [57.0, 717.0], [57.1, 717.0], [57.2, 717.0], [57.3, 717.0], [57.4, 717.0], [57.5, 717.0], [57.6, 717.0], [57.7, 718.0], [57.8, 718.0], [57.9, 718.0], [58.0, 719.0], [58.1, 719.0], [58.2, 719.0], [58.3, 720.0], [58.4, 721.0], [58.5, 722.0], [58.6, 723.0], [58.7, 724.0], [58.8, 725.0], [58.9, 725.0], [59.0, 725.0], [59.1, 725.0], [59.2, 726.0], [59.3, 726.0], [59.4, 727.0], [59.5, 728.0], [59.6, 728.0], [59.7, 728.0], [59.8, 729.0], [59.9, 730.0], [60.0, 731.0], [60.1, 731.0], [60.2, 731.0], [60.3, 732.0], [60.4, 732.0], [60.5, 733.0], [60.6, 734.0], [60.7, 735.0], [60.8, 736.0], [60.9, 736.0], [61.0, 738.0], [61.1, 738.0], [61.2, 740.0], [61.3, 740.0], [61.4, 741.0], [61.5, 741.0], [61.6, 741.0], [61.7, 745.0], [61.8, 746.0], [61.9, 747.0], [62.0, 747.0], [62.1, 749.0], [62.2, 752.0], [62.3, 752.0], [62.4, 753.0], [62.5, 754.0], [62.6, 755.0], [62.7, 756.0], [62.8, 757.0], [62.9, 758.0], [63.0, 758.0], [63.1, 761.0], [63.2, 762.0], [63.3, 763.0], [63.4, 765.0], [63.5, 765.0], [63.6, 765.0], [63.7, 766.0], [63.8, 766.0], [63.9, 766.0], [64.0, 767.0], [64.1, 769.0], [64.2, 771.0], [64.3, 771.0], [64.4, 773.0], [64.5, 773.0], [64.6, 774.0], [64.7, 775.0], [64.8, 775.0], [64.9, 776.0], [65.0, 777.0], [65.1, 777.0], [65.2, 779.0], [65.3, 779.0], [65.4, 780.0], [65.5, 782.0], [65.6, 784.0], [65.7, 785.0], [65.8, 785.0], [65.9, 786.0], [66.0, 788.0], [66.1, 789.0], [66.2, 790.0], [66.3, 791.0], [66.4, 792.0], [66.5, 793.0], [66.6, 794.0], [66.7, 794.0], [66.8, 795.0], [66.9, 795.0], [67.0, 796.0], [67.1, 797.0], [67.2, 797.0], [67.3, 798.0], [67.4, 800.0], [67.5, 801.0], [67.6, 802.0], [67.7, 802.0], [67.8, 804.0], [67.9, 804.0], [68.0, 804.0], [68.1, 805.0], [68.2, 807.0], [68.3, 808.0], [68.4, 808.0], [68.5, 809.0], [68.6, 810.0], [68.7, 811.0], [68.8, 811.0], [68.9, 812.0], [69.0, 812.0], [69.1, 813.0], [69.2, 813.0], [69.3, 814.0], [69.4, 815.0], [69.5, 815.0], [69.6, 815.0], [69.7, 816.0], [69.8, 816.0], [69.9, 817.0], [70.0, 817.0], [70.1, 817.0], [70.2, 817.0], [70.3, 817.0], [70.4, 818.0], [70.5, 818.0], [70.6, 818.0], [70.7, 818.0], [70.8, 818.0], [70.9, 818.0], [71.0, 818.0], [71.1, 818.0], [71.2, 819.0], [71.3, 819.0], [71.4, 819.0], [71.5, 819.0], [71.6, 819.0], [71.7, 819.0], [71.8, 819.0], [71.9, 820.0], [72.0, 820.0], [72.1, 820.0], [72.2, 820.0], [72.3, 820.0], [72.4, 820.0], [72.5, 821.0], [72.6, 821.0], [72.7, 823.0], [72.8, 823.0], [72.9, 824.0], [73.0, 824.0], [73.1, 825.0], [73.2, 825.0], [73.3, 826.0], [73.4, 826.0], [73.5, 827.0], [73.6, 827.0], [73.7, 828.0], [73.8, 828.0], [73.9, 829.0], [74.0, 829.0], [74.1, 831.0], [74.2, 831.0], [74.3, 831.0], [74.4, 832.0], [74.5, 833.0], [74.6, 834.0], [74.7, 834.0], [74.8, 835.0], [74.9, 835.0], [75.0, 835.0], [75.1, 836.0], [75.2, 836.0], [75.3, 837.0], [75.4, 837.0], [75.5, 838.0], [75.6, 839.0], [75.7, 840.0], [75.8, 841.0], [75.9, 841.0], [76.0, 842.0], [76.1, 843.0], [76.2, 844.0], [76.3, 844.0], [76.4, 846.0], [76.5, 846.0], [76.6, 847.0], [76.7, 847.0], [76.8, 848.0], [76.9, 849.0], [77.0, 849.0], [77.1, 851.0], [77.2, 851.0], [77.3, 851.0], [77.4, 851.0], [77.5, 853.0], [77.6, 854.0], [77.7, 855.0], [77.8, 855.0], [77.9, 855.0], [78.0, 856.0], [78.1, 858.0], [78.2, 858.0], [78.3, 859.0], [78.4, 860.0], [78.5, 861.0], [78.6, 863.0], [78.7, 863.0], [78.8, 864.0], [78.9, 865.0], [79.0, 866.0], [79.1, 867.0], [79.2, 869.0], [79.3, 870.0], [79.4, 870.0], [79.5, 870.0], [79.6, 870.0], [79.7, 871.0], [79.8, 872.0], [79.9, 873.0], [80.0, 876.0], [80.1, 877.0], [80.2, 877.0], [80.3, 878.0], [80.4, 879.0], [80.5, 880.0], [80.6, 880.0], [80.7, 881.0], [80.8, 882.0], [80.9, 885.0], [81.0, 885.0], [81.1, 887.0], [81.2, 889.0], [81.3, 890.0], [81.4, 892.0], [81.5, 893.0], [81.6, 895.0], [81.7, 896.0], [81.8, 899.0], [81.9, 899.0], [82.0, 900.0], [82.1, 901.0], [82.2, 902.0], [82.3, 902.0], [82.4, 903.0], [82.5, 906.0], [82.6, 907.0], [82.7, 907.0], [82.8, 908.0], [82.9, 908.0], [83.0, 910.0], [83.1, 910.0], [83.2, 911.0], [83.3, 911.0], [83.4, 912.0], [83.5, 912.0], [83.6, 913.0], [83.7, 914.0], [83.8, 916.0], [83.9, 916.0], [84.0, 917.0], [84.1, 918.0], [84.2, 918.0], [84.3, 919.0], [84.4, 919.0], [84.5, 919.0], [84.6, 920.0], [84.7, 920.0], [84.8, 920.0], [84.9, 920.0], [85.0, 920.0], [85.1, 920.0], [85.2, 921.0], [85.3, 921.0], [85.4, 921.0], [85.5, 921.0], [85.6, 921.0], [85.7, 922.0], [85.8, 922.0], [85.9, 922.0], [86.0, 922.0], [86.1, 923.0], [86.2, 924.0], [86.3, 924.0], [86.4, 927.0], [86.5, 929.0], [86.6, 932.0], [86.7, 933.0], [86.8, 933.0], [86.9, 935.0], [87.0, 937.0], [87.1, 940.0], [87.2, 941.0], [87.3, 942.0], [87.4, 943.0], [87.5, 947.0], [87.6, 948.0], [87.7, 949.0], [87.8, 950.0], [87.9, 952.0], [88.0, 953.0], [88.1, 957.0], [88.2, 959.0], [88.3, 960.0], [88.4, 964.0], [88.5, 966.0], [88.6, 970.0], [88.7, 971.0], [88.8, 972.0], [88.9, 979.0], [89.0, 981.0], [89.1, 983.0], [89.2, 989.0], [89.3, 999.0], [89.4, 1001.0], [89.5, 1003.0], [89.6, 1004.0], [89.7, 1010.0], [89.8, 1013.0], [89.9, 1014.0], [90.0, 1016.0], [90.1, 1017.0], [90.2, 1018.0], [90.3, 1018.0], [90.4, 1019.0], [90.5, 1019.0], [90.6, 1022.0], [90.7, 1023.0], [90.8, 1023.0], [90.9, 1023.0], [91.0, 1024.0], [91.1, 1025.0], [91.2, 1025.0], [91.3, 1029.0], [91.4, 1033.0], [91.5, 1033.0], [91.6, 1035.0], [91.7, 1036.0], [91.8, 1039.0], [91.9, 1041.0], [92.0, 1042.0], [92.1, 1044.0], [92.2, 1047.0], [92.3, 1050.0], [92.4, 1052.0], [92.5, 1053.0], [92.6, 1053.0], [92.7, 1055.0], [92.8, 1056.0], [92.9, 1061.0], [93.0, 1064.0], [93.1, 1070.0], [93.2, 1079.0], [93.3, 1080.0], [93.4, 1085.0], [93.5, 1088.0], [93.6, 1094.0], [93.7, 1097.0], [93.8, 1102.0], [93.9, 1104.0], [94.0, 1111.0], [94.1, 1116.0], [94.2, 1119.0], [94.3, 1122.0], [94.4, 1124.0], [94.5, 1126.0], [94.6, 1128.0], [94.7, 1133.0], [94.8, 1140.0], [94.9, 1143.0], [95.0, 1145.0], [95.1, 1149.0], [95.2, 1149.0], [95.3, 1155.0], [95.4, 1163.0], [95.5, 1168.0], [95.6, 1171.0], [95.7, 1187.0], [95.8, 1194.0], [95.9, 1202.0], [96.0, 1209.0], [96.1, 1215.0], [96.2, 1219.0], [96.3, 1223.0], [96.4, 1229.0], [96.5, 1241.0], [96.6, 1246.0], [96.7, 1262.0], [96.8, 1271.0], [96.9, 1277.0], [97.0, 1281.0], [97.1, 1294.0], [97.2, 1304.0], [97.3, 1312.0], [97.4, 1313.0], [97.5, 1318.0], [97.6, 1320.0], [97.7, 1325.0], [97.8, 1331.0], [97.9, 1331.0], [98.0, 1335.0], [98.1, 1347.0], [98.2, 1354.0], [98.3, 1372.0], [98.4, 1378.0], [98.5, 1385.0], [98.6, 1389.0], [98.7, 1393.0], [98.8, 1406.0], [98.9, 1412.0], [99.0, 1422.0], [99.1, 1448.0], [99.2, 1487.0], [99.3, 1607.0], [99.4, 1637.0], [99.5, 1649.0], [99.6, 1785.0], [99.7, 2019.0], [99.8, 2152.0], [99.9, 2226.0]], "isOverall": false, "label": "store data", "isController": false}, {"data": [[0.0, 335.0], [0.1, 362.0], [0.2, 363.0], [0.3, 363.0], [0.4, 388.0], [0.5, 394.0], [0.6, 405.0], [0.7, 411.0], [0.8, 413.0], [0.9, 415.0], [1.0, 419.0], [1.1, 423.0], [1.2, 429.0], [1.3, 431.0], [1.4, 431.0], [1.5, 435.0], [1.6, 443.0], [1.7, 446.0], [1.8, 449.0], [1.9, 458.0], [2.0, 463.0], [2.1, 468.0], [2.2, 470.0], [2.3, 498.0], [2.4, 498.0], [2.5, 499.0], [2.6, 521.0], [2.7, 541.0], [2.8, 547.0], [2.9, 573.0], [3.0, 575.0], [3.1, 575.0], [3.2, 577.0], [3.3, 577.0], [3.4, 577.0], [3.5, 577.0], [3.6, 580.0], [3.7, 580.0], [3.8, 581.0], [3.9, 582.0], [4.0, 582.0], [4.1, 584.0], [4.2, 584.0], [4.3, 584.0], [4.4, 585.0], [4.5, 585.0], [4.6, 585.0], [4.7, 585.0], [4.8, 586.0], [4.9, 586.0], [5.0, 586.0], [5.1, 587.0], [5.2, 587.0], [5.3, 588.0], [5.4, 588.0], [5.5, 589.0], [5.6, 589.0], [5.7, 589.0], [5.8, 590.0], [5.9, 590.0], [6.0, 590.0], [6.1, 590.0], [6.2, 590.0], [6.3, 591.0], [6.4, 592.0], [6.5, 592.0], [6.6, 592.0], [6.7, 593.0], [6.8, 593.0], [6.9, 593.0], [7.0, 593.0], [7.1, 594.0], [7.2, 594.0], [7.3, 594.0], [7.4, 594.0], [7.5, 595.0], [7.6, 595.0], [7.7, 596.0], [7.8, 596.0], [7.9, 596.0], [8.0, 596.0], [8.1, 596.0], [8.2, 597.0], [8.3, 597.0], [8.4, 597.0], [8.5, 597.0], [8.6, 597.0], [8.7, 597.0], [8.8, 599.0], [8.9, 599.0], [9.0, 599.0], [9.1, 599.0], [9.2, 599.0], [9.3, 601.0], [9.4, 601.0], [9.5, 601.0], [9.6, 601.0], [9.7, 601.0], [9.8, 601.0], [9.9, 601.0], [10.0, 601.0], [10.1, 601.0], [10.2, 602.0], [10.3, 602.0], [10.4, 602.0], [10.5, 602.0], [10.6, 602.0], [10.7, 603.0], [10.8, 603.0], [10.9, 603.0], [11.0, 605.0], [11.1, 605.0], [11.2, 605.0], [11.3, 605.0], [11.4, 606.0], [11.5, 606.0], [11.6, 606.0], [11.7, 607.0], [11.8, 608.0], [11.9, 608.0], [12.0, 609.0], [12.1, 609.0], [12.2, 610.0], [12.3, 610.0], [12.4, 610.0], [12.5, 610.0], [12.6, 611.0], [12.7, 611.0], [12.8, 612.0], [12.9, 612.0], [13.0, 612.0], [13.1, 613.0], [13.2, 613.0], [13.3, 613.0], [13.4, 613.0], [13.5, 614.0], [13.6, 614.0], [13.7, 614.0], [13.8, 615.0], [13.9, 615.0], [14.0, 617.0], [14.1, 618.0], [14.2, 618.0], [14.3, 618.0], [14.4, 619.0], [14.5, 619.0], [14.6, 620.0], [14.7, 621.0], [14.8, 621.0], [14.9, 621.0], [15.0, 622.0], [15.1, 623.0], [15.2, 623.0], [15.3, 624.0], [15.4, 625.0], [15.5, 625.0], [15.6, 626.0], [15.7, 626.0], [15.8, 626.0], [15.9, 626.0], [16.0, 627.0], [16.1, 628.0], [16.2, 628.0], [16.3, 628.0], [16.4, 628.0], [16.5, 629.0], [16.6, 630.0], [16.7, 630.0], [16.8, 630.0], [16.9, 630.0], [17.0, 631.0], [17.1, 631.0], [17.2, 631.0], [17.3, 631.0], [17.4, 631.0], [17.5, 632.0], [17.6, 632.0], [17.7, 633.0], [17.8, 633.0], [17.9, 633.0], [18.0, 634.0], [18.1, 634.0], [18.2, 634.0], [18.3, 635.0], [18.4, 635.0], [18.5, 636.0], [18.6, 637.0], [18.7, 637.0], [18.8, 638.0], [18.9, 638.0], [19.0, 639.0], [19.1, 640.0], [19.2, 640.0], [19.3, 640.0], [19.4, 640.0], [19.5, 640.0], [19.6, 641.0], [19.7, 641.0], [19.8, 641.0], [19.9, 641.0], [20.0, 642.0], [20.1, 643.0], [20.2, 643.0], [20.3, 643.0], [20.4, 643.0], [20.5, 643.0], [20.6, 644.0], [20.7, 644.0], [20.8, 644.0], [20.9, 644.0], [21.0, 645.0], [21.1, 645.0], [21.2, 645.0], [21.3, 645.0], [21.4, 645.0], [21.5, 645.0], [21.6, 646.0], [21.7, 646.0], [21.8, 646.0], [21.9, 646.0], [22.0, 647.0], [22.1, 648.0], [22.2, 648.0], [22.3, 648.0], [22.4, 648.0], [22.5, 648.0], [22.6, 648.0], [22.7, 648.0], [22.8, 649.0], [22.9, 650.0], [23.0, 650.0], [23.1, 650.0], [23.2, 651.0], [23.3, 651.0], [23.4, 651.0], [23.5, 652.0], [23.6, 652.0], [23.7, 652.0], [23.8, 652.0], [23.9, 652.0], [24.0, 653.0], [24.1, 653.0], [24.2, 653.0], [24.3, 654.0], [24.4, 655.0], [24.5, 655.0], [24.6, 656.0], [24.7, 656.0], [24.8, 656.0], [24.9, 656.0], [25.0, 656.0], [25.1, 657.0], [25.2, 657.0], [25.3, 658.0], [25.4, 658.0], [25.5, 658.0], [25.6, 659.0], [25.7, 659.0], [25.8, 660.0], [25.9, 660.0], [26.0, 660.0], [26.1, 660.0], [26.2, 661.0], [26.3, 661.0], [26.4, 662.0], [26.5, 662.0], [26.6, 662.0], [26.7, 662.0], [26.8, 662.0], [26.9, 663.0], [27.0, 663.0], [27.1, 663.0], [27.2, 665.0], [27.3, 665.0], [27.4, 665.0], [27.5, 665.0], [27.6, 665.0], [27.7, 666.0], [27.8, 666.0], [27.9, 666.0], [28.0, 666.0], [28.1, 667.0], [28.2, 667.0], [28.3, 667.0], [28.4, 667.0], [28.5, 668.0], [28.6, 669.0], [28.7, 669.0], [28.8, 670.0], [28.9, 670.0], [29.0, 671.0], [29.1, 672.0], [29.2, 672.0], [29.3, 673.0], [29.4, 673.0], [29.5, 673.0], [29.6, 673.0], [29.7, 673.0], [29.8, 673.0], [29.9, 674.0], [30.0, 674.0], [30.1, 674.0], [30.2, 674.0], [30.3, 674.0], [30.4, 674.0], [30.5, 674.0], [30.6, 675.0], [30.7, 675.0], [30.8, 675.0], [30.9, 676.0], [31.0, 677.0], [31.1, 677.0], [31.2, 677.0], [31.3, 677.0], [31.4, 677.0], [31.5, 677.0], [31.6, 678.0], [31.7, 678.0], [31.8, 679.0], [31.9, 679.0], [32.0, 680.0], [32.1, 680.0], [32.2, 680.0], [32.3, 680.0], [32.4, 680.0], [32.5, 680.0], [32.6, 680.0], [32.7, 681.0], [32.8, 681.0], [32.9, 681.0], [33.0, 681.0], [33.1, 681.0], [33.2, 681.0], [33.3, 681.0], [33.4, 682.0], [33.5, 683.0], [33.6, 683.0], [33.7, 683.0], [33.8, 683.0], [33.9, 684.0], [34.0, 684.0], [34.1, 684.0], [34.2, 685.0], [34.3, 685.0], [34.4, 685.0], [34.5, 686.0], [34.6, 686.0], [34.7, 687.0], [34.8, 687.0], [34.9, 688.0], [35.0, 688.0], [35.1, 688.0], [35.2, 688.0], [35.3, 688.0], [35.4, 689.0], [35.5, 689.0], [35.6, 690.0], [35.7, 690.0], [35.8, 690.0], [35.9, 691.0], [36.0, 691.0], [36.1, 692.0], [36.2, 692.0], [36.3, 692.0], [36.4, 693.0], [36.5, 693.0], [36.6, 694.0], [36.7, 694.0], [36.8, 694.0], [36.9, 694.0], [37.0, 694.0], [37.1, 695.0], [37.2, 695.0], [37.3, 695.0], [37.4, 696.0], [37.5, 697.0], [37.6, 697.0], [37.7, 697.0], [37.8, 697.0], [37.9, 697.0], [38.0, 697.0], [38.1, 697.0], [38.2, 698.0], [38.3, 698.0], [38.4, 699.0], [38.5, 699.0], [38.6, 699.0], [38.7, 700.0], [38.8, 700.0], [38.9, 700.0], [39.0, 701.0], [39.1, 701.0], [39.2, 701.0], [39.3, 701.0], [39.4, 701.0], [39.5, 701.0], [39.6, 701.0], [39.7, 702.0], [39.8, 702.0], [39.9, 702.0], [40.0, 703.0], [40.1, 703.0], [40.2, 704.0], [40.3, 704.0], [40.4, 705.0], [40.5, 705.0], [40.6, 705.0], [40.7, 705.0], [40.8, 706.0], [40.9, 706.0], [41.0, 707.0], [41.1, 707.0], [41.2, 707.0], [41.3, 707.0], [41.4, 707.0], [41.5, 707.0], [41.6, 708.0], [41.7, 708.0], [41.8, 709.0], [41.9, 709.0], [42.0, 709.0], [42.1, 709.0], [42.2, 710.0], [42.3, 710.0], [42.4, 710.0], [42.5, 711.0], [42.6, 711.0], [42.7, 711.0], [42.8, 711.0], [42.9, 713.0], [43.0, 713.0], [43.1, 713.0], [43.2, 714.0], [43.3, 714.0], [43.4, 714.0], [43.5, 715.0], [43.6, 715.0], [43.7, 716.0], [43.8, 717.0], [43.9, 717.0], [44.0, 718.0], [44.1, 718.0], [44.2, 718.0], [44.3, 718.0], [44.4, 719.0], [44.5, 719.0], [44.6, 719.0], [44.7, 719.0], [44.8, 719.0], [44.9, 720.0], [45.0, 720.0], [45.1, 721.0], [45.2, 721.0], [45.3, 722.0], [45.4, 724.0], [45.5, 724.0], [45.6, 724.0], [45.7, 724.0], [45.8, 725.0], [45.9, 725.0], [46.0, 725.0], [46.1, 725.0], [46.2, 726.0], [46.3, 727.0], [46.4, 727.0], [46.5, 727.0], [46.6, 727.0], [46.7, 727.0], [46.8, 727.0], [46.9, 728.0], [47.0, 728.0], [47.1, 729.0], [47.2, 729.0], [47.3, 729.0], [47.4, 730.0], [47.5, 730.0], [47.6, 732.0], [47.7, 732.0], [47.8, 733.0], [47.9, 733.0], [48.0, 733.0], [48.1, 733.0], [48.2, 733.0], [48.3, 734.0], [48.4, 735.0], [48.5, 735.0], [48.6, 735.0], [48.7, 736.0], [48.8, 737.0], [48.9, 738.0], [49.0, 738.0], [49.1, 738.0], [49.2, 739.0], [49.3, 739.0], [49.4, 739.0], [49.5, 739.0], [49.6, 739.0], [49.7, 741.0], [49.8, 741.0], [49.9, 741.0], [50.0, 742.0], [50.1, 743.0], [50.2, 744.0], [50.3, 744.0], [50.4, 745.0], [50.5, 746.0], [50.6, 747.0], [50.7, 747.0], [50.8, 747.0], [50.9, 747.0], [51.0, 748.0], [51.1, 748.0], [51.2, 749.0], [51.3, 750.0], [51.4, 751.0], [51.5, 751.0], [51.6, 752.0], [51.7, 754.0], [51.8, 755.0], [51.9, 755.0], [52.0, 755.0], [52.1, 756.0], [52.2, 757.0], [52.3, 758.0], [52.4, 758.0], [52.5, 758.0], [52.6, 759.0], [52.7, 760.0], [52.8, 760.0], [52.9, 763.0], [53.0, 764.0], [53.1, 765.0], [53.2, 766.0], [53.3, 766.0], [53.4, 767.0], [53.5, 768.0], [53.6, 768.0], [53.7, 769.0], [53.8, 770.0], [53.9, 770.0], [54.0, 770.0], [54.1, 770.0], [54.2, 771.0], [54.3, 771.0], [54.4, 772.0], [54.5, 772.0], [54.6, 772.0], [54.7, 773.0], [54.8, 773.0], [54.9, 774.0], [55.0, 775.0], [55.1, 775.0], [55.2, 776.0], [55.3, 777.0], [55.4, 777.0], [55.5, 778.0], [55.6, 778.0], [55.7, 778.0], [55.8, 778.0], [55.9, 778.0], [56.0, 779.0], [56.1, 779.0], [56.2, 780.0], [56.3, 780.0], [56.4, 781.0], [56.5, 782.0], [56.6, 782.0], [56.7, 782.0], [56.8, 783.0], [56.9, 785.0], [57.0, 785.0], [57.1, 785.0], [57.2, 785.0], [57.3, 788.0], [57.4, 789.0], [57.5, 789.0], [57.6, 790.0], [57.7, 790.0], [57.8, 792.0], [57.9, 793.0], [58.0, 793.0], [58.1, 793.0], [58.2, 796.0], [58.3, 797.0], [58.4, 797.0], [58.5, 799.0], [58.6, 800.0], [58.7, 800.0], [58.8, 804.0], [58.9, 804.0], [59.0, 805.0], [59.1, 806.0], [59.2, 806.0], [59.3, 807.0], [59.4, 807.0], [59.5, 808.0], [59.6, 808.0], [59.7, 809.0], [59.8, 809.0], [59.9, 809.0], [60.0, 809.0], [60.1, 809.0], [60.2, 810.0], [60.3, 811.0], [60.4, 811.0], [60.5, 812.0], [60.6, 812.0], [60.7, 813.0], [60.8, 814.0], [60.9, 814.0], [61.0, 814.0], [61.1, 814.0], [61.2, 814.0], [61.3, 816.0], [61.4, 816.0], [61.5, 816.0], [61.6, 817.0], [61.7, 818.0], [61.8, 818.0], [61.9, 818.0], [62.0, 819.0], [62.1, 820.0], [62.2, 820.0], [62.3, 820.0], [62.4, 821.0], [62.5, 821.0], [62.6, 822.0], [62.7, 822.0], [62.8, 822.0], [62.9, 823.0], [63.0, 823.0], [63.1, 823.0], [63.2, 824.0], [63.3, 824.0], [63.4, 824.0], [63.5, 824.0], [63.6, 825.0], [63.7, 825.0], [63.8, 826.0], [63.9, 827.0], [64.0, 829.0], [64.1, 829.0], [64.2, 830.0], [64.3, 832.0], [64.4, 832.0], [64.5, 832.0], [64.6, 834.0], [64.7, 836.0], [64.8, 837.0], [64.9, 837.0], [65.0, 838.0], [65.1, 838.0], [65.2, 838.0], [65.3, 839.0], [65.4, 840.0], [65.5, 840.0], [65.6, 841.0], [65.7, 841.0], [65.8, 842.0], [65.9, 843.0], [66.0, 843.0], [66.1, 845.0], [66.2, 845.0], [66.3, 846.0], [66.4, 846.0], [66.5, 847.0], [66.6, 847.0], [66.7, 847.0], [66.8, 847.0], [66.9, 847.0], [67.0, 848.0], [67.1, 848.0], [67.2, 849.0], [67.3, 849.0], [67.4, 849.0], [67.5, 850.0], [67.6, 850.0], [67.7, 851.0], [67.8, 852.0], [67.9, 852.0], [68.0, 854.0], [68.1, 854.0], [68.2, 854.0], [68.3, 855.0], [68.4, 855.0], [68.5, 856.0], [68.6, 857.0], [68.7, 858.0], [68.8, 858.0], [68.9, 859.0], [69.0, 860.0], [69.1, 860.0], [69.2, 861.0], [69.3, 861.0], [69.4, 861.0], [69.5, 862.0], [69.6, 862.0], [69.7, 863.0], [69.8, 863.0], [69.9, 864.0], [70.0, 865.0], [70.1, 865.0], [70.2, 866.0], [70.3, 867.0], [70.4, 867.0], [70.5, 868.0], [70.6, 868.0], [70.7, 869.0], [70.8, 870.0], [70.9, 871.0], [71.0, 871.0], [71.1, 872.0], [71.2, 872.0], [71.3, 873.0], [71.4, 873.0], [71.5, 873.0], [71.6, 873.0], [71.7, 874.0], [71.8, 875.0], [71.9, 875.0], [72.0, 875.0], [72.1, 876.0], [72.2, 877.0], [72.3, 877.0], [72.4, 879.0], [72.5, 879.0], [72.6, 880.0], [72.7, 880.0], [72.8, 881.0], [72.9, 881.0], [73.0, 882.0], [73.1, 882.0], [73.2, 882.0], [73.3, 882.0], [73.4, 882.0], [73.5, 882.0], [73.6, 884.0], [73.7, 885.0], [73.8, 885.0], [73.9, 885.0], [74.0, 887.0], [74.1, 888.0], [74.2, 888.0], [74.3, 889.0], [74.4, 890.0], [74.5, 890.0], [74.6, 890.0], [74.7, 891.0], [74.8, 893.0], [74.9, 893.0], [75.0, 893.0], [75.1, 894.0], [75.2, 894.0], [75.3, 895.0], [75.4, 896.0], [75.5, 896.0], [75.6, 896.0], [75.7, 897.0], [75.8, 897.0], [75.9, 897.0], [76.0, 898.0], [76.1, 898.0], [76.2, 900.0], [76.3, 901.0], [76.4, 903.0], [76.5, 903.0], [76.6, 903.0], [76.7, 904.0], [76.8, 904.0], [76.9, 905.0], [77.0, 905.0], [77.1, 906.0], [77.2, 908.0], [77.3, 908.0], [77.4, 909.0], [77.5, 910.0], [77.6, 911.0], [77.7, 914.0], [77.8, 915.0], [77.9, 916.0], [78.0, 916.0], [78.1, 916.0], [78.2, 916.0], [78.3, 918.0], [78.4, 918.0], [78.5, 919.0], [78.6, 921.0], [78.7, 921.0], [78.8, 921.0], [78.9, 922.0], [79.0, 922.0], [79.1, 922.0], [79.2, 922.0], [79.3, 923.0], [79.4, 923.0], [79.5, 924.0], [79.6, 925.0], [79.7, 926.0], [79.8, 926.0], [79.9, 929.0], [80.0, 929.0], [80.1, 929.0], [80.2, 931.0], [80.3, 932.0], [80.4, 933.0], [80.5, 938.0], [80.6, 939.0], [80.7, 939.0], [80.8, 941.0], [80.9, 945.0], [81.0, 947.0], [81.1, 948.0], [81.2, 949.0], [81.3, 950.0], [81.4, 950.0], [81.5, 951.0], [81.6, 952.0], [81.7, 955.0], [81.8, 956.0], [81.9, 956.0], [82.0, 958.0], [82.1, 958.0], [82.2, 959.0], [82.3, 960.0], [82.4, 960.0], [82.5, 961.0], [82.6, 962.0], [82.7, 963.0], [82.8, 963.0], [82.9, 965.0], [83.0, 966.0], [83.1, 969.0], [83.2, 970.0], [83.3, 971.0], [83.4, 973.0], [83.5, 974.0], [83.6, 979.0], [83.7, 979.0], [83.8, 979.0], [83.9, 981.0], [84.0, 983.0], [84.1, 985.0], [84.2, 986.0], [84.3, 988.0], [84.4, 989.0], [84.5, 989.0], [84.6, 990.0], [84.7, 991.0], [84.8, 993.0], [84.9, 994.0], [85.0, 994.0], [85.1, 994.0], [85.2, 995.0], [85.3, 996.0], [85.4, 997.0], [85.5, 998.0], [85.6, 999.0], [85.7, 1001.0], [85.8, 1001.0], [85.9, 1002.0], [86.0, 1005.0], [86.1, 1007.0], [86.2, 1008.0], [86.3, 1011.0], [86.4, 1011.0], [86.5, 1012.0], [86.6, 1014.0], [86.7, 1014.0], [86.8, 1015.0], [86.9, 1019.0], [87.0, 1026.0], [87.1, 1028.0], [87.2, 1030.0], [87.3, 1036.0], [87.4, 1039.0], [87.5, 1039.0], [87.6, 1040.0], [87.7, 1040.0], [87.8, 1042.0], [87.9, 1043.0], [88.0, 1044.0], [88.1, 1045.0], [88.2, 1049.0], [88.3, 1050.0], [88.4, 1052.0], [88.5, 1054.0], [88.6, 1055.0], [88.7, 1057.0], [88.8, 1057.0], [88.9, 1060.0], [89.0, 1062.0], [89.1, 1062.0], [89.2, 1063.0], [89.3, 1063.0], [89.4, 1063.0], [89.5, 1064.0], [89.6, 1065.0], [89.7, 1081.0], [89.8, 1082.0], [89.9, 1082.0], [90.0, 1083.0], [90.1, 1086.0], [90.2, 1087.0], [90.3, 1087.0], [90.4, 1088.0], [90.5, 1089.0], [90.6, 1089.0], [90.7, 1089.0], [90.8, 1095.0], [90.9, 1095.0], [91.0, 1096.0], [91.1, 1097.0], [91.2, 1098.0], [91.3, 1099.0], [91.4, 1100.0], [91.5, 1101.0], [91.6, 1107.0], [91.7, 1107.0], [91.8, 1112.0], [91.9, 1116.0], [92.0, 1126.0], [92.1, 1128.0], [92.2, 1130.0], [92.3, 1133.0], [92.4, 1135.0], [92.5, 1137.0], [92.6, 1138.0], [92.7, 1140.0], [92.8, 1141.0], [92.9, 1146.0], [93.0, 1149.0], [93.1, 1149.0], [93.2, 1155.0], [93.3, 1157.0], [93.4, 1159.0], [93.5, 1160.0], [93.6, 1162.0], [93.7, 1165.0], [93.8, 1167.0], [93.9, 1171.0], [94.0, 1171.0], [94.1, 1177.0], [94.2, 1177.0], [94.3, 1178.0], [94.4, 1179.0], [94.5, 1181.0], [94.6, 1188.0], [94.7, 1197.0], [94.8, 1204.0], [94.9, 1209.0], [95.0, 1217.0], [95.1, 1230.0], [95.2, 1241.0], [95.3, 1249.0], [95.4, 1250.0], [95.5, 1252.0], [95.6, 1253.0], [95.7, 1254.0], [95.8, 1261.0], [95.9, 1266.0], [96.0, 1275.0], [96.1, 1284.0], [96.2, 1285.0], [96.3, 1287.0], [96.4, 1288.0], [96.5, 1293.0], [96.6, 1299.0], [96.7, 1315.0], [96.8, 1328.0], [96.9, 1329.0], [97.0, 1344.0], [97.1, 1345.0], [97.2, 1348.0], [97.3, 1349.0], [97.4, 1353.0], [97.5, 1357.0], [97.6, 1362.0], [97.7, 1372.0], [97.8, 1384.0], [97.9, 1386.0], [98.0, 1386.0], [98.1, 1399.0], [98.2, 1404.0], [98.3, 1431.0], [98.4, 1434.0], [98.5, 1476.0], [98.6, 1514.0], [98.7, 1604.0], [98.8, 1735.0], [98.9, 1761.0], [99.0, 1986.0], [99.1, 1995.0], [99.2, 2036.0], [99.3, 2043.0], [99.4, 2201.0], [99.5, 2232.0], [99.6, 2252.0], [99.7, 2264.0], [99.8, 2362.0], [99.9, 3827.0]], "isOverall": false, "label": "sign in", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 711.0, "series": [{"data": [[2100.0, 3.0], [2200.0, 3.0], [600.0, 711.0], [700.0, 357.0], [800.0, 332.0], [200.0, 1.0], [900.0, 169.0], [1000.0, 100.0], [1100.0, 48.0], [300.0, 17.0], [1200.0, 28.0], [1300.0, 37.0], [1400.0, 12.0], [1500.0, 1.0], [400.0, 9.0], [1600.0, 6.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [500.0, 441.0], [2000.0, 1.0]], "isOverall": false, "label": "store data", "isController": false}, {"data": [[2200.0, 4.0], [2300.0, 1.0], [600.0, 294.0], [700.0, 199.0], [800.0, 176.0], [900.0, 96.0], [3800.0, 1.0], [1000.0, 57.0], [1100.0, 34.0], [300.0, 6.0], [1200.0, 19.0], [1300.0, 15.0], [1400.0, 4.0], [1500.0, 1.0], [400.0, 19.0], [1600.0, 1.0], [1700.0, 2.0], [1900.0, 2.0], [500.0, 67.0], [2000.0, 2.0]], "isOverall": false, "label": "sign in", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 31.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3196.0, "series": [{"data": [[0.0, 52.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3196.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 31.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 286.0, "minX": 1.55743014E12, "maxY": 1000.0, "series": [{"data": [[1.55743188E12, 1000.0], [1.5574341E12, 1000.0], [1.5574335E12, 1000.0], [1.55743026E12, 417.75], [1.55743248E12, 1000.0], [1.55743068E12, 899.1249999999999], [1.5574323E12, 1000.0], [1.55743512E12, 1000.0], [1.55743128E12, 1000.0], [1.5574329E12, 1000.0], [1.55743452E12, 1000.0], [1.55743206E12, 1000.0], [1.55743044E12, 636.1875], [1.55743488E12, 1000.0], [1.55743104E12, 1000.0], [1.55743266E12, 1000.0], [1.55743428E12, 1000.0], [1.55743086E12, 1000.0], [1.55743308E12, 1000.0], [1.55743368E12, 1000.0], [1.5574353E12, 289.0], [1.5574347E12, 1000.0], [1.55743146E12, 1000.0], [1.55743092E12, 1000.0], [1.55743254E12, 1000.0], [1.55743152E12, 1000.0], [1.55743314E12, 1000.0], [1.55743476E12, 1000.0], [1.55743134E12, 1000.0], [1.55743416E12, 1000.0], [1.55743518E12, 1000.0], [1.55743194E12, 1000.0], [1.55743356E12, 1000.0], [1.55743032E12, 503.75], [1.5574311E12, 1000.0], [1.55743392E12, 1000.0], [1.55743494E12, 1000.0], [1.5574317E12, 1000.0], [1.55743332E12, 1000.0], [1.55743212E12, 1000.0], [1.55743434E12, 1000.0], [1.55743374E12, 1000.0], [1.5574305E12, 692.6111111111112], [1.55743272E12, 1000.0], [1.55743158E12, 1000.0], [1.5574344E12, 1000.0], [1.5574338E12, 1000.0], [1.55743056E12, 763.9230769230768], [1.55743218E12, 1000.0], [1.55743038E12, 561.2142857142858], [1.5574326E12, 1000.0], [1.55743482E12, 1000.0], [1.5574332E12, 1000.0], [1.55743098E12, 1000.0], [1.55743422E12, 1000.0], [1.55743014E12, 286.0], [1.55743236E12, 1000.0], [1.55743458E12, 1000.0], [1.55743398E12, 1000.0], [1.55743074E12, 968.0975609756098], [1.55743296E12, 1000.0], [1.55743116E12, 1000.0], [1.55743338E12, 1000.0], [1.55743278E12, 1000.0], [1.55743176E12, 1000.0], [1.557435E12, 1000.0], [1.55743062E12, 832.5], [1.55743284E12, 1000.0], [1.55743506E12, 1000.0], [1.55743344E12, 1000.0], [1.55743446E12, 1000.0], [1.55743122E12, 1000.0], [1.55743164E12, 1000.0], [1.55743386E12, 1000.0], [1.55743326E12, 1000.0], [1.55743224E12, 1000.0], [1.5574314E12, 1000.0], [1.55743362E12, 1000.0], [1.55743302E12, 1000.0], [1.557432E12, 1000.0], [1.55743524E12, 1000.0], [1.55743182E12, 1000.0], [1.5574302E12, 369.875], [1.55743464E12, 1000.0], [1.55743404E12, 1000.0], [1.5574308E12, 999.8620689655172], [1.55743242E12, 1000.0]], "isOverall": false, "label": "store_data", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5574353E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 286.0, "minX": 51.0, "maxY": 3827.0, "series": [{"data": [[526.0, 307.0], [535.0, 509.0], [551.0, 305.0], [563.0, 305.0], [565.0, 825.5], [568.0, 613.0], [584.0, 407.0], [604.0, 403.0], [618.0, 305.0], [634.0, 502.0], [636.0, 611.0], [642.0, 817.0], [646.0, 612.0], [652.0, 307.0], [660.0, 286.0], [664.0, 910.0], [671.0, 307.0], [678.0, 337.0], [680.0, 699.0], [690.0, 407.0], [696.0, 332.0], [716.0, 308.0], [720.0, 715.0], [721.0, 817.0], [736.0, 300.0], [749.0, 717.0], [754.0, 716.0], [756.0, 685.0], [762.0, 613.0], [764.0, 809.0], [770.0, 862.0], [773.0, 800.0], [786.0, 716.0], [794.0, 615.0], [802.0, 704.0], [834.0, 357.0], [836.0, 776.0], [837.0, 614.0], [841.0, 615.0], [848.0, 558.0], [866.0, 360.0], [871.0, 303.0], [877.0, 305.0], [888.0, 406.0], [890.0, 661.0], [896.0, 1050.6666666666667], [900.0, 707.0], [901.0, 613.0], [907.0, 613.0], [909.0, 542.0], [913.0, 612.0], [918.0, 919.0], [927.0, 553.0], [930.0, 818.5], [938.0, 645.5], [956.0, 576.0], [957.0, 851.0], [958.0, 613.0], [962.0, 612.0], [961.0, 716.0], [964.0, 530.0], [966.0, 614.0], [971.0, 1073.3333333333333], [972.0, 913.0], [973.0, 533.0], [978.0, 610.0], [989.0, 611.0], [986.0, 899.0], [987.0, 591.0], [982.0, 1121.0], [983.0, 742.0], [998.0, 632.0], [1000.0, 751.1773082223239], [51.0, 1066.0], [53.0, 1039.0], [52.0, 1080.0], [266.0, 467.0], [284.0, 501.0], [286.0, 606.0], [290.0, 647.0], [305.0, 715.0], [337.0, 410.0], [367.0, 398.0], [381.0, 305.0], [395.0, 408.0], [406.0, 410.0], [430.0, 399.0], [494.0, 408.0], [498.0, 604.0], [500.0, 767.5], [506.0, 714.0]], "isOverall": false, "label": "store data", "isController": false}, {"data": [[987.616498464239, 746.297498903029]], "isOverall": false, "label": "store data-Aggregated", "isController": false}, {"data": [[526.0, 415.0], [534.0, 468.0], [551.0, 429.0], [562.0, 405.0], [564.0, 894.5], [567.0, 854.0], [584.0, 388.0], [603.0, 463.0], [618.0, 377.0], [633.0, 363.0], [636.0, 674.0], [641.0, 686.0], [645.0, 691.0], [652.0, 827.0], [659.0, 423.0], [663.0, 646.0], [671.0, 499.0], [678.0, 335.0], [679.0, 689.0], [689.0, 362.0], [696.0, 419.0], [716.0, 498.0], [719.0, 678.0], [720.0, 772.0], [736.0, 431.0], [748.0, 678.0], [754.0, 656.0], [755.0, 939.0], [761.0, 713.0], [763.0, 656.0], [769.0, 871.0], [772.0, 854.5], [786.0, 690.0], [793.0, 679.0], [801.0, 678.0], [833.0, 413.0], [835.0, 612.0], [836.0, 895.0], [840.0, 652.0], [847.0, 1008.0], [866.0, 394.0], [871.0, 470.0], [877.0, 458.0], [888.0, 435.0], [890.0, 643.0], [894.0, 1048.0], [895.0, 1171.0], [899.0, 744.0], [900.0, 756.0], [907.0, 799.0], [909.0, 725.0], [913.0, 688.0], [926.0, 681.0], [929.0, 850.5], [937.0, 633.0], [955.0, 683.0], [956.0, 630.0], [957.0, 981.0], [961.0, 855.0], [960.0, 627.0], [963.0, 694.0], [965.0, 710.0], [969.0, 732.0], [970.0, 1138.0], [971.0, 896.0], [972.0, 830.0], [978.0, 680.0], [988.0, 726.0], [985.0, 931.0], [986.0, 911.0], [981.0, 935.0], [982.0, 1098.0], [998.0, 720.0], [1000.0, 817.7466814159291], [266.0, 3827.0], [284.0, 577.0], [285.0, 741.0], [290.0, 631.0], [304.0, 449.0], [337.0, 498.0], [367.0, 446.0], [381.0, 443.0], [394.0, 521.0], [405.0, 547.0], [430.0, 411.0], [494.0, 577.0], [497.0, 696.0], [499.0, 826.0], [500.0, 929.0], [505.0, 738.0]], "isOverall": false, "label": "sign in", "isController": false}, {"data": [[974.7280000000001, 808.1850000000009]], "isOverall": false, "label": "sign in-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 30.6, "minX": 1.55743014E12, "maxY": 683.95, "series": [{"data": [[1.55743188E12, 352.6], [1.5574341E12, 224.85], [1.5574335E12, 478.0], [1.55743026E12, 32.6], [1.55743248E12, 390.85], [1.55743068E12, 260.8], [1.5574323E12, 306.7], [1.55743512E12, 237.15], [1.55743128E12, 202.25], [1.5574329E12, 359.25], [1.55743452E12, 306.0], [1.55743206E12, 324.0], [1.55743044E12, 130.4], [1.55743488E12, 237.15], [1.55743104E12, 259.8], [1.55743266E12, 295.05], [1.55743428E12, 280.4], [1.55743086E12, 275.1], [1.55743308E12, 442.75], [1.55743368E12, 423.45], [1.5574353E12, 30.6], [1.5574347E12, 237.15], [1.55743146E12, 347.95], [1.55743092E12, 381.55], [1.55743254E12, 378.55], [1.55743152E12, 241.5], [1.55743314E12, 502.95], [1.55743476E12, 214.2], [1.55743134E12, 253.15], [1.55743416E12, 350.25], [1.55743518E12, 275.4], [1.55743194E12, 339.3], [1.55743356E12, 389.85], [1.55743032E12, 97.8], [1.5574311E12, 300.05], [1.55743392E12, 419.45], [1.55743494E12, 229.5], [1.5574317E12, 289.4], [1.55743332E12, 438.75], [1.55743212E12, 257.8], [1.55743434E12, 306.0], [1.55743374E12, 347.6], [1.5574305E12, 146.7], [1.55743272E12, 377.55], [1.55743158E12, 331.65], [1.5574344E12, 313.65], [1.5574338E12, 475.0], [1.55743056E12, 211.9], [1.55743218E12, 340.3], [1.55743038E12, 114.1], [1.5574326E12, 369.9], [1.55743482E12, 260.1], [1.5574332E12, 395.85], [1.55743098E12, 260.8], [1.55743422E12, 229.5], [1.55743014E12, 81.5], [1.55743236E12, 330.65], [1.55743458E12, 267.75], [1.55743398E12, 314.0], [1.55743074E12, 332.65], [1.55743296E12, 375.55], [1.55743116E12, 390.2], [1.55743338E12, 324.65], [1.55743278E12, 55.55], [1.55743176E12, 243.5], [1.557435E12, 306.0], [1.55743062E12, 97.8], [1.55743284E12, 352.6], [1.55743506E12, 275.4], [1.55743344E12, 468.35], [1.55743446E12, 221.85], [1.55743122E12, 357.6], [1.55743164E12, 364.25], [1.55743386E12, 416.45], [1.55743326E12, 519.25], [1.55743224E12, 417.8], [1.5574314E12, 298.05], [1.55743362E12, 461.7], [1.55743302E12, 336.3], [1.557432E12, 289.4], [1.55743524E12, 275.4], [1.55743182E12, 436.1], [1.5574302E12, 65.2], [1.55743464E12, 221.85], [1.55743404E12, 377.2], [1.5574308E12, 235.85], [1.55743242E12, 299.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.55743188E12, 455.43333333333334], [1.5574341E12, 352.01666666666665], [1.5574335E12, 640.4333333333333], [1.55743026E12, 37.6], [1.55743248E12, 519.7333333333333], [1.55743068E12, 301.3], [1.5574323E12, 378.4], [1.55743512E12, 398.3], [1.55743128E12, 245.68333333333334], [1.5574329E12, 475.23333333333335], [1.55743452E12, 513.9833333333333], [1.55743206E12, 390.35], [1.55743044E12, 150.66666666666666], [1.55743488E12, 398.3], [1.55743104E12, 308.1333333333333], [1.55743266E12, 392.96666666666664], [1.55743428E12, 428.18333333333334], [1.55743086E12, 333.8666666666667], [1.55743308E12, 555.55], [1.55743368E12, 557.4333333333333], [1.5574353E12, 51.4], [1.5574347E12, 398.31666666666666], [1.55743146E12, 421.93333333333334], [1.55743092E12, 452.6666666666667], [1.55743254E12, 473.4166666666667], [1.55743152E12, 303.06666666666666], [1.55743314E12, 665.2], [1.55743476E12, 359.76666666666665], [1.55743134E12, 288.45], [1.55743416E12, 536.95], [1.55743518E12, 462.5833333333333], [1.55743194E12, 416.01666666666665], [1.55743356E12, 526.6], [1.55743032E12, 112.9], [1.5574311E12, 358.65], [1.55743392E12, 584.8833333333333], [1.55743494E12, 385.4], [1.5574317E12, 366.4], [1.55743332E12, 583.0666666666667], [1.55743212E12, 321.9], [1.55743434E12, 513.8833333333333], [1.55743374E12, 489.85], [1.5574305E12, 169.43333333333334], [1.55743272E12, 480.23333333333335], [1.55743158E12, 403.21666666666664], [1.5574344E12, 526.8], [1.5574338E12, 661.05], [1.55743056E12, 244.8], [1.55743218E12, 409.1], [1.55743038E12, 131.73333333333332], [1.5574326E12, 467.46666666666664], [1.55743482E12, 436.9], [1.5574332E12, 485.3833333333333], [1.55743098E12, 301.2], [1.55743422E12, 385.4166666666667], [1.55743014E12, 94.03333333333333], [1.55743236E12, 410.06666666666666], [1.55743458E12, 449.6666666666667], [1.55743398E12, 459.01666666666665], [1.55743074E12, 396.3], [1.55743296E12, 494.03333333333336], [1.55743116E12, 458.7], [1.55743338E12, 451.25], [1.55743278E12, 76.16666666666667], [1.55743176E12, 289.3333333333333], [1.557435E12, 513.9666666666667], [1.55743062E12, 112.93333333333334], [1.55743284E12, 455.4166666666667], [1.55743506E12, 462.51666666666665], [1.55743344E12, 641.3166666666667], [1.55743446E12, 372.55], [1.55743122E12, 421.05], [1.55743164E12, 440.8666666666667], [1.55743386E12, 605.4166666666666], [1.55743326E12, 683.95], [1.55743224E12, 530.7833333333333], [1.5574314E12, 372.4166666666667], [1.55743362E12, 621.6166666666667], [1.55743302E12, 436.6166666666667], [1.557432E12, 366.3666666666667], [1.55743524E12, 462.53333333333336], [1.55743182E12, 535.7833333333333], [1.5574302E12, 75.26666666666667], [1.55743464E12, 372.65], [1.55743404E12, 548.0666666666667], [1.5574308E12, 276.46666666666664], [1.55743242E12, 365.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5574353E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 380.25, "minX": 1.55743014E12, "maxY": 1245.0, "series": [{"data": [[1.55743188E12, 841.8571428571429], [1.5574341E12, 671.1538461538461], [1.5574335E12, 721.0243902439023], [1.55743026E12, 404.5], [1.55743248E12, 792.4242424242423], [1.55743068E12, 660.3125000000001], [1.5574323E12, 679.9090909090909], [1.55743512E12, 646.6129032258063], [1.55743128E12, 784.5], [1.5574329E12, 766.4000000000001], [1.55743452E12, 722.4], [1.55743206E12, 749.4545454545455], [1.55743044E12, 480.37500000000006], [1.55743488E12, 672.7419354838711], [1.55743104E12, 767.4117647058822], [1.55743266E12, 720.92], [1.55743428E12, 767.032258064516], [1.55743086E12, 710.3157894736843], [1.55743308E12, 752.5151515151516], [1.55743368E12, 761.8285714285713], [1.5574353E12, 946.0], [1.5574347E12, 666.0967741935484], [1.55743146E12, 750.7916666666667], [1.55743092E12, 731.12], [1.55743254E12, 795.6785714285713], [1.55743152E12, 777.6111111111111], [1.55743314E12, 774.404761904762], [1.55743476E12, 694.8928571428571], [1.55743134E12, 757.1999999999999], [1.55743416E12, 701.6410256410259], [1.55743518E12, 751.4166666666665], [1.55743194E12, 770.8750000000001], [1.55743356E12, 752.9117647058823], [1.55743032E12, 594.6666666666667], [1.5574311E12, 728.3000000000001], [1.55743392E12, 772.076923076923], [1.55743494E12, 886.1666666666667], [1.5574317E12, 727.409090909091], [1.55743332E12, 812.7837837837839], [1.55743212E12, 729.8947368421053], [1.55743434E12, 705.3750000000002], [1.55743374E12, 799.1515151515151], [1.5574305E12, 536.8888888888889], [1.55743272E12, 766.1034482758622], [1.55743158E12, 793.2608695652174], [1.5574344E12, 689.2195121951222], [1.5574338E12, 734.0], [1.55743056E12, 708.6153846153845], [1.55743218E12, 819.5652173913045], [1.55743038E12, 541.4285714285714], [1.5574326E12, 718.0714285714284], [1.55743482E12, 624.4705882352941], [1.5574332E12, 792.7142857142858], [1.55743098E12, 694.5625], [1.55743422E12, 635.9666666666667], [1.55743014E12, 587.2], [1.55743236E12, 750.0000000000001], [1.55743458E12, 648.5714285714286], [1.55743398E12, 643.21875], [1.55743074E12, 771.9090909090908], [1.55743296E12, 773.6129032258063], [1.55743116E12, 818.8399999999999], [1.55743338E12, 716.3333333333334], [1.55743278E12, 684.4], [1.55743176E12, 676.6875], [1.557435E12, 770.9249999999997], [1.55743062E12, 604.0], [1.55743284E12, 784.5714285714287], [1.55743506E12, 688.2777777777776], [1.55743344E12, 824.4761904761904], [1.55743446E12, 790.2068965517243], [1.55743122E12, 839.9999999999999], [1.55743164E12, 729.4], [1.55743386E12, 773.6904761904763], [1.55743326E12, 866.5116279069767], [1.55743224E12, 1165.625], [1.5574314E12, 799.3636363636364], [1.55743362E12, 721.7250000000001], [1.55743302E12, 752.9629629629629], [1.557432E12, 741.6363636363637], [1.55743524E12, 693.25], [1.55743182E12, 844.0967741935483], [1.5574302E12, 380.25], [1.55743464E12, 644.9310344827586], [1.55743404E12, 755.9473684210528], [1.5574308E12, 674.0666666666667], [1.55743242E12, 767.4285714285716]], "isOverall": false, "label": "store data", "isController": false}, {"data": [[1.55743188E12, 853.0625000000001], [1.5574341E12, 667.6666666666666], [1.5574335E12, 788.0526315789474], [1.55743026E12, 479.0], [1.55743248E12, 851.125], [1.55743068E12, 735.0625], [1.5574323E12, 733.8125000000001], [1.55743128E12, 803.1818181818184], [1.5574329E12, 741.6], [1.55743206E12, 795.5555555555555], [1.55743044E12, 563.0], [1.55743104E12, 814.0], [1.55743266E12, 782.7499999999999], [1.55743428E12, 641.4], [1.55743086E12, 771.1333333333333], [1.55743308E12, 822.3181818181818], [1.55743368E12, 813.9444444444442], [1.55743146E12, 788.3684210526316], [1.55743092E12, 784.6818181818182], [1.55743254E12, 776.8947368421053], [1.55743152E12, 854.6666666666666], [1.55743314E12, 818.2380952380953], [1.55743134E12, 812.5625], [1.55743416E12, 617.8333333333334], [1.55743194E12, 825.9444444444446], [1.55743356E12, 810.2666666666667], [1.55743032E12, 696.8333333333334], [1.5574311E12, 783.7058823529412], [1.55743392E12, 748.5714285714287], [1.5574317E12, 721.0714285714286], [1.55743332E12, 728.7222222222222], [1.55743212E12, 769.1538461538462], [1.55743374E12, 820.6363636363636], [1.5574305E12, 544.2222222222222], [1.55743272E12, 831.5], [1.55743158E12, 838.7222222222223], [1.5574338E12, 821.4375], [1.55743056E12, 736.2307692307693], [1.55743218E12, 875.421052631579], [1.55743038E12, 619.0], [1.5574326E12, 785.3333333333334], [1.5574332E12, 848.5238095238097], [1.55743098E12, 774.4375000000001], [1.55743014E12, 1245.0], [1.55743236E12, 788.4117647058823], [1.55743398E12, 709.875], [1.55743074E12, 822.3684210526316], [1.55743296E12, 848.7499999999999], [1.55743116E12, 978.0434782608694], [1.55743338E12, 752.2727272727273], [1.55743278E12, 758.0], [1.55743176E12, 745.0], [1.55743062E12, 709.6666666666666], [1.55743284E12, 788.9999999999999], [1.55743344E12, 831.4705882352941], [1.55743122E12, 949.0952380952381], [1.55743164E12, 780.85], [1.55743386E12, 867.4545454545455], [1.55743326E12, 902.6363636363639], [1.55743224E12, 1239.4500000000003], [1.5574314E12, 852.2], [1.55743362E12, 709.8888888888889], [1.55743302E12, 855.5333333333333], [1.557432E12, 821.2142857142856], [1.55743182E12, 882.2173913043478], [1.5574302E12, 477.0], [1.55743404E12, 676.4000000000001], [1.5574308E12, 719.1428571428571], [1.55743242E12, 830.9375]], "isOverall": false, "label": "sign in", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5574353E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 380.25, "minX": 1.55743014E12, "maxY": 1244.8, "series": [{"data": [[1.55743188E12, 841.8571428571429], [1.5574341E12, 671.1538461538461], [1.5574335E12, 721.0243902439023], [1.55743026E12, 404.5], [1.55743248E12, 792.3939393939394], [1.55743068E12, 660.3125000000001], [1.5574323E12, 679.9090909090909], [1.55743512E12, 646.6129032258063], [1.55743128E12, 784.3571428571429], [1.5574329E12, 766.4000000000001], [1.55743452E12, 722.4], [1.55743206E12, 749.4545454545455], [1.55743044E12, 480.37500000000006], [1.55743488E12, 672.7419354838711], [1.55743104E12, 767.3529411764706], [1.55743266E12, 720.8800000000001], [1.55743428E12, 767.032258064516], [1.55743086E12, 710.1578947368421], [1.55743308E12, 752.5151515151516], [1.55743368E12, 761.8285714285713], [1.5574353E12, 946.0], [1.5574347E12, 666.0967741935484], [1.55743146E12, 750.7500000000001], [1.55743092E12, 731.04], [1.55743254E12, 795.6428571428572], [1.55743152E12, 777.4444444444445], [1.55743314E12, 774.3809523809526], [1.55743476E12, 694.8214285714286], [1.55743134E12, 757.1333333333333], [1.55743416E12, 701.6410256410259], [1.55743518E12, 751.3888888888888], [1.55743194E12, 770.6666666666666], [1.55743356E12, 752.9117647058823], [1.55743032E12, 594.3333333333334], [1.5574311E12, 728.3000000000001], [1.55743392E12, 772.076923076923], [1.55743494E12, 886.1666666666667], [1.5574317E12, 727.3636363636365], [1.55743332E12, 812.7837837837839], [1.55743212E12, 729.8947368421053], [1.55743434E12, 705.35], [1.55743374E12, 799.1515151515151], [1.5574305E12, 536.8888888888889], [1.55743272E12, 766.1034482758622], [1.55743158E12, 793.2173913043478], [1.5574344E12, 689.1951219512197], [1.5574338E12, 733.9772727272727], [1.55743056E12, 708.5384615384615], [1.55743218E12, 819.5652173913045], [1.55743038E12, 541.2857142857142], [1.5574326E12, 717.9999999999999], [1.55743482E12, 624.4705882352941], [1.5574332E12, 792.7142857142858], [1.55743098E12, 694.5], [1.55743422E12, 635.9666666666667], [1.55743014E12, 587.2], [1.55743236E12, 750.0000000000001], [1.55743458E12, 648.5428571428573], [1.55743398E12, 643.21875], [1.55743074E12, 771.7727272727274], [1.55743296E12, 773.5483870967741], [1.55743116E12, 818.76], [1.55743338E12, 716.2666666666667], [1.55743278E12, 684.4], [1.55743176E12, 676.6875], [1.557435E12, 770.8999999999997], [1.55743062E12, 604.0], [1.55743284E12, 784.5357142857143], [1.55743506E12, 688.2499999999999], [1.55743344E12, 824.4761904761904], [1.55743446E12, 790.2068965517243], [1.55743122E12, 839.9565217391305], [1.55743164E12, 729.4], [1.55743386E12, 773.6904761904763], [1.55743326E12, 866.4651162790699], [1.55743224E12, 1165.625], [1.5574314E12, 799.2727272727273], [1.55743362E12, 721.7000000000004], [1.55743302E12, 752.888888888889], [1.557432E12, 741.5909090909091], [1.55743524E12, 693.25], [1.55743182E12, 844.0645161290324], [1.5574302E12, 380.25], [1.55743464E12, 644.9310344827586], [1.55743404E12, 755.9473684210528], [1.5574308E12, 673.8666666666667], [1.55743242E12, 767.4285714285716]], "isOverall": false, "label": "store data", "isController": false}, {"data": [[1.55743188E12, 852.9375], [1.5574341E12, 667.6666666666666], [1.5574335E12, 788.0000000000001], [1.55743026E12, 479.0], [1.55743248E12, 851.125], [1.55743068E12, 735.0625], [1.5574323E12, 733.8125000000001], [1.55743128E12, 803.0909090909091], [1.5574329E12, 741.6], [1.55743206E12, 795.5], [1.55743044E12, 563.0], [1.55743104E12, 813.8666666666667], [1.55743266E12, 782.7499999999999], [1.55743428E12, 641.4], [1.55743086E12, 771.0000000000001], [1.55743308E12, 822.3181818181818], [1.55743368E12, 813.9444444444442], [1.55743146E12, 788.3157894736844], [1.55743092E12, 784.5909090909092], [1.55743254E12, 776.8421052631579], [1.55743152E12, 854.5833333333334], [1.55743314E12, 818.2380952380953], [1.55743134E12, 812.375], [1.55743416E12, 617.8333333333334], [1.55743194E12, 825.8333333333334], [1.55743356E12, 810.2666666666667], [1.55743032E12, 696.8333333333334], [1.5574311E12, 783.5882352941178], [1.55743392E12, 748.5714285714287], [1.5574317E12, 721.0714285714286], [1.55743332E12, 728.7222222222222], [1.55743212E12, 768.9999999999999], [1.55743374E12, 820.5454545454545], [1.5574305E12, 544.1111111111111], [1.55743272E12, 831.5], [1.55743158E12, 838.6666666666667], [1.5574338E12, 821.4375], [1.55743056E12, 736.2307692307693], [1.55743218E12, 875.421052631579], [1.55743038E12, 619.0], [1.5574326E12, 785.3333333333334], [1.5574332E12, 848.5238095238097], [1.55743098E12, 774.3125000000001], [1.55743014E12, 1244.8], [1.55743236E12, 788.4117647058823], [1.55743398E12, 709.875], [1.55743074E12, 822.2105263157895], [1.55743296E12, 848.7499999999999], [1.55743116E12, 977.8695652173911], [1.55743338E12, 752.2727272727273], [1.55743278E12, 758.0], [1.55743176E12, 744.9285714285716], [1.55743062E12, 709.6666666666666], [1.55743284E12, 788.9999999999999], [1.55743344E12, 831.4705882352941], [1.55743122E12, 949.047619047619], [1.55743164E12, 780.75], [1.55743386E12, 867.4545454545455], [1.55743326E12, 902.5909090909092], [1.55743224E12, 1239.4500000000003], [1.5574314E12, 852.1333333333333], [1.55743362E12, 709.8888888888889], [1.55743302E12, 855.5333333333333], [1.557432E12, 821.2142857142856], [1.55743182E12, 882.1304347826086], [1.5574302E12, 476.75], [1.55743404E12, 676.4000000000001], [1.5574308E12, 719.1428571428571], [1.55743242E12, 830.875]], "isOverall": false, "label": "sign in", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5574353E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.55743014E12, "maxY": 770.8000000000001, "series": [{"data": [[1.55743188E12, 35.99999999999999], [1.5574341E12, 48.92307692307692], [1.5574335E12, 29.414634146341456], [1.55743026E12, 0.0], [1.55743248E12, 37.87878787878787], [1.55743068E12, 4.750000000000001], [1.5574323E12, 24.90909090909091], [1.55743512E12, 55.129032258064505], [1.55743128E12, 10.071428571428571], [1.5574329E12, 43.43333333333333], [1.55743452E12, 88.125], [1.55743206E12, 12.90909090909091], [1.55743044E12, 0.0], [1.55743488E12, 58.9032258064516], [1.55743104E12, 9.294117647058824], [1.55743266E12, 35.120000000000005], [1.55743428E12, 53.41935483870967], [1.55743086E12, 11.736842105263158], [1.55743308E12, 27.969696969696972], [1.55743368E12, 25.97142857142857], [1.5574353E12, 54.25], [1.5574347E12, 55.16129032258063], [1.55743146E12, 16.25], [1.55743092E12, 8.559999999999999], [1.55743254E12, 22.571428571428573], [1.55743152E12, 26.72222222222222], [1.55743314E12, 29.97619047619047], [1.55743476E12, 56.0], [1.55743134E12, 0.0], [1.55743416E12, 48.179487179487175], [1.55743518E12, 84.49999999999999], [1.55743194E12, 17.708333333333332], [1.55743356E12, 30.617647058823536], [1.55743032E12, 0.0], [1.5574311E12, 18.95], [1.55743392E12, 36.17948717948718], [1.55743494E12, 58.666666666666664], [1.5574317E12, 29.727272727272723], [1.55743332E12, 28.810810810810807], [1.55743212E12, 24.263157894736842], [1.55743434E12, 54.475], [1.55743374E12, 39.63636363636365], [1.5574305E12, 0.0], [1.55743272E12, 26.137931034482754], [1.55743158E12, 16.782608695652176], [1.5574344E12, 55.51219512195122], [1.5574338E12, 34.0909090909091], [1.55743056E12, 0.0], [1.55743218E12, 12.08695652173913], [1.55743038E12, 0.0], [1.5574326E12, 24.249999999999996], [1.55743482E12, 55.41176470588234], [1.5574332E12, 19.82142857142857], [1.55743098E12, 0.0], [1.55743422E12, 52.900000000000006], [1.55743014E12, 15.8], [1.55743236E12, 24.458333333333332], [1.55743458E12, 55.88571428571428], [1.55743398E12, 41.40625], [1.55743074E12, 6.636363636363637], [1.55743296E12, 31.870967741935488], [1.55743116E12, 20.800000000000004], [1.55743338E12, 37.93333333333333], [1.55743278E12, 34.2], [1.55743176E12, 13.624999999999998], [1.557435E12, 57.624999999999986], [1.55743062E12, 0.0], [1.55743284E12, 24.46428571428571], [1.55743506E12, 60.194444444444436], [1.55743344E12, 34.21428571428572], [1.55743446E12, 54.34482758620689], [1.55743122E12, 2.9565217391304346], [1.55743164E12, 14.760000000000002], [1.55743386E12, 40.38095238095239], [1.55743326E12, 28.348837209302328], [1.55743224E12, 35.12500000000001], [1.5574314E12, 20.27272727272728], [1.55743362E12, 30.575000000000006], [1.55743302E12, 29.259259259259263], [1.557432E12, 29.045454545454547], [1.55743524E12, 55.52777777777777], [1.55743182E12, 16.09677419354839], [1.5574302E12, 0.0], [1.55743464E12, 55.03448275862068], [1.55743404E12, 40.842105263157904], [1.5574308E12, 10.866666666666665], [1.55743242E12, 15.809523809523807]], "isOverall": false, "label": "store data", "isController": false}, {"data": [[1.55743188E12, 82.8125], [1.5574341E12, 56.0], [1.5574335E12, 54.47368421052631], [1.55743026E12, 67.5], [1.55743248E12, 71.49999999999999], [1.55743068E12, 81.00000000000001], [1.5574323E12, 91.5625], [1.55743128E12, 73.90909090909089], [1.5574329E12, 64.26666666666667], [1.55743206E12, 75.94444444444446], [1.55743044E12, 78.0], [1.55743104E12, 91.60000000000001], [1.55743266E12, 69.58333333333333], [1.55743428E12, 56.8], [1.55743086E12, 84.66666666666667], [1.55743308E12, 70.36363636363639], [1.55743368E12, 55.111111111111114], [1.55743146E12, 76.10526315789473], [1.55743092E12, 77.95454545454544], [1.55743254E12, 68.21052631578947], [1.55743152E12, 78.5], [1.55743314E12, 66.57142857142858], [1.55743134E12, 80.5625], [1.55743416E12, 56.666666666666664], [1.55743194E12, 73.22222222222223], [1.55743356E12, 78.06666666666666], [1.55743032E12, 84.16666666666666], [1.5574311E12, 76.52941176470588], [1.55743392E12, 57.0], [1.5574317E12, 73.07142857142856], [1.55743332E12, 53.388888888888886], [1.55743212E12, 70.76923076923076], [1.55743374E12, 53.18181818181818], [1.5574305E12, 74.77777777777777], [1.55743272E12, 66.27777777777777], [1.55743158E12, 79.66666666666667], [1.5574338E12, 141.37499999999997], [1.55743056E12, 86.6923076923077], [1.55743218E12, 68.89473684210529], [1.55743038E12, 79.85714285714285], [1.5574326E12, 69.11111111111111], [1.5574332E12, 68.85714285714285], [1.55743098E12, 78.125], [1.55743014E12, 770.8000000000001], [1.55743236E12, 69.35294117647058], [1.55743398E12, 58.25], [1.55743074E12, 80.3157894736842], [1.55743296E12, 90.56250000000001], [1.55743116E12, 196.6521739130435], [1.55743338E12, 54.45454545454545], [1.55743278E12, 63.0], [1.55743176E12, 76.71428571428572], [1.55743062E12, 69.5], [1.55743284E12, 60.8125], [1.55743344E12, 53.76470588235294], [1.55743122E12, 99.00000000000001], [1.55743164E12, 83.4], [1.55743386E12, 58.09090909090909], [1.55743326E12, 67.45454545454545], [1.55743224E12, 69.5], [1.5574314E12, 76.93333333333332], [1.55743362E12, 57.166666666666664], [1.55743302E12, 152.2], [1.557432E12, 74.14285714285712], [1.55743182E12, 83.60869565217392], [1.5574302E12, 71.25], [1.55743404E12, 57.3], [1.5574308E12, 78.14285714285714], [1.55743242E12, 70.62499999999999]], "isOverall": false, "label": "sign in", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5574353E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 286.0, "minX": 1.55743014E12, "maxY": 3827.0, "series": [{"data": [[1.55743188E12, 1426.0], [1.5574341E12, 945.0], [1.5574335E12, 1253.0], [1.55743026E12, 547.0], [1.55743248E12, 1476.0], [1.55743068E12, 1171.0], [1.5574323E12, 1001.0], [1.55743512E12, 851.0], [1.55743128E12, 1088.0], [1.5574329E12, 1222.0], [1.55743452E12, 1873.0], [1.55743206E12, 1162.0], [1.55743044E12, 827.0], [1.55743488E12, 1096.0], [1.55743104E12, 1082.0], [1.55743266E12, 1178.0], [1.55743428E12, 1122.0], [1.55743086E12, 1119.0], [1.55743308E12, 1305.0], [1.55743368E12, 1412.0], [1.5574353E12, 1080.0], [1.5574347E12, 877.0], [1.55743146E12, 998.0], [1.55743092E12, 924.0], [1.55743254E12, 1372.0], [1.55743152E12, 1372.0], [1.55743314E12, 1254.0], [1.55743476E12, 916.0], [1.55743134E12, 1285.0], [1.55743416E12, 1056.0], [1.55743518E12, 2226.0], [1.55743194E12, 1320.0], [1.55743356E12, 1401.0], [1.55743032E12, 929.0], [1.5574311E12, 926.0], [1.55743392E12, 1331.0], [1.55743494E12, 1649.0], [1.5574317E12, 1016.0], [1.55743332E12, 1499.0], [1.55743212E12, 1049.0], [1.55743434E12, 972.0], [1.55743374E12, 1406.0], [1.5574305E12, 910.0], [1.55743272E12, 1157.0], [1.55743158E12, 1165.0], [1.5574344E12, 933.0], [1.5574338E12, 2201.0], [1.55743056E12, 939.0], [1.55743218E12, 1514.0], [1.55743038E12, 911.0], [1.5574326E12, 1250.0], [1.55743482E12, 813.0], [1.5574332E12, 1287.0], [1.55743098E12, 1011.0], [1.55743422E12, 812.0], [1.55743014E12, 3827.0], [1.55743236E12, 1196.0], [1.55743458E12, 933.0], [1.55743398E12, 1092.0], [1.55743074E12, 1140.0], [1.55743296E12, 1399.0], [1.55743116E12, 2252.0], [1.55743338E12, 1472.0], [1.55743278E12, 834.0], [1.55743176E12, 1007.0], [1.557435E12, 1411.0], [1.55743062E12, 1008.0], [1.55743284E12, 1194.0], [1.55743506E12, 910.0], [1.55743344E12, 1385.0], [1.55743446E12, 1304.0], [1.55743122E12, 1404.0], [1.55743164E12, 1033.0], [1.55743386E12, 1422.0], [1.55743326E12, 1785.0], [1.55743224E12, 2362.0], [1.5574314E12, 1349.0], [1.55743362E12, 1145.0], [1.55743302E12, 1986.0], [1.557432E12, 1249.0], [1.55743524E12, 1097.0], [1.55743182E12, 1434.0], [1.5574302E12, 521.0], [1.55743464E12, 867.0], [1.55743404E12, 1262.0], [1.5574308E12, 945.0], [1.55743242E12, 1219.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.55743188E12, 538.0], [1.5574341E12, 516.0], [1.5574335E12, 525.0], [1.55743026E12, 399.0], [1.55743248E12, 568.0], [1.55743068E12, 303.0], [1.5574323E12, 538.0], [1.55743512E12, 583.0], [1.55743128E12, 544.0], [1.5574329E12, 551.0], [1.55743452E12, 571.0], [1.55743206E12, 580.0], [1.55743044E12, 286.0], [1.55743488E12, 574.0], [1.55743104E12, 534.0], [1.55743266E12, 612.0], [1.55743428E12, 508.0], [1.55743086E12, 551.0], [1.55743308E12, 538.0], [1.55743368E12, 519.0], [1.5574353E12, 599.0], [1.5574347E12, 573.0], [1.55743146E12, 531.0], [1.55743092E12, 554.0], [1.55743254E12, 536.0], [1.55743152E12, 552.0], [1.55743314E12, 530.0], [1.55743476E12, 591.0], [1.55743134E12, 548.0], [1.55743416E12, 511.0], [1.55743518E12, 582.0], [1.55743194E12, 563.0], [1.55743356E12, 532.0], [1.55743032E12, 307.0], [1.5574311E12, 536.0], [1.55743392E12, 515.0], [1.55743494E12, 584.0], [1.5574317E12, 538.0], [1.55743332E12, 535.0], [1.55743212E12, 544.0], [1.55743434E12, 580.0], [1.55743374E12, 514.0], [1.5574305E12, 307.0], [1.55743272E12, 577.0], [1.55743158E12, 594.0], [1.5574344E12, 582.0], [1.5574338E12, 527.0], [1.55743056E12, 300.0], [1.55743218E12, 533.0], [1.55743038E12, 305.0], [1.5574326E12, 530.0], [1.55743482E12, 579.0], [1.5574332E12, 534.0], [1.55743098E12, 535.0], [1.55743422E12, 574.0], [1.55743014E12, 449.0], [1.55743236E12, 594.0], [1.55743458E12, 581.0], [1.55743398E12, 522.0], [1.55743074E12, 530.0], [1.55743296E12, 534.0], [1.55743116E12, 541.0], [1.55743338E12, 528.0], [1.55743278E12, 610.0], [1.55743176E12, 542.0], [1.557435E12, 581.0], [1.55743062E12, 357.0], [1.55743284E12, 529.0], [1.55743506E12, 585.0], [1.55743344E12, 524.0], [1.55743446E12, 575.0], [1.55743122E12, 552.0], [1.55743164E12, 536.0], [1.55743386E12, 530.0], [1.55743326E12, 524.0], [1.55743224E12, 585.0], [1.5574314E12, 576.0], [1.55743362E12, 522.0], [1.55743302E12, 540.0], [1.557432E12, 541.0], [1.55743524E12, 577.0], [1.55743182E12, 554.0], [1.5574302E12, 305.0], [1.55743464E12, 576.0], [1.55743404E12, 523.0], [1.5574308E12, 554.0], [1.55743242E12, 550.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.55743188E12, 1126.0], [1.5574341E12, 912.0], [1.5574335E12, 1054.6], [1.55743026E12, 547.0], [1.55743248E12, 991.0], [1.55743068E12, 1092.7], [1.5574323E12, 829.9], [1.55743512E12, 820.8], [1.55743128E12, 1045.6000000000001], [1.5574329E12, 1023.0], [1.55743452E12, 1161.8], [1.55743206E12, 961.8], [1.55743044E12, 820.0], [1.55743488E12, 867.8], [1.55743104E12, 1052.5], [1.55743266E12, 965.4000000000001], [1.55743428E12, 1076.3000000000002], [1.55743086E12, 907.5], [1.55743308E12, 964.2], [1.55743368E12, 1239.0], [1.5574353E12, 1080.0], [1.5574347E12, 816.0], [1.55743146E12, 928.6], [1.55743092E12, 891.6], [1.55743254E12, 1020.0], [1.55743152E12, 1129.4], [1.55743314E12, 1004.4], [1.55743476E12, 874.7], [1.55743134E12, 1256.2], [1.55743416E12, 957.6], [1.55743518E12, 1125.8000000000006], [1.55743194E12, 1072.2000000000003], [1.55743356E12, 1108.0], [1.55743032E12, 898.1000000000001], [1.5574311E12, 919.8], [1.55743392E12, 1123.4], [1.55743494E12, 1532.0], [1.5574317E12, 896.6000000000005], [1.55743332E12, 1298.0], [1.55743212E12, 950.8], [1.55743434E12, 918.7], [1.55743374E12, 1337.0], [1.5574305E12, 826.3000000000002], [1.55743272E12, 1025.2], [1.55743158E12, 1037.0], [1.5574344E12, 885.6], [1.5574338E12, 908.8], [1.55743056E12, 922.7], [1.55743218E12, 1330.1], [1.55743038E12, 907.5], [1.5574326E12, 1005.0], [1.55743482E12, 734.5], [1.5574332E12, 1052.0], [1.55743098E12, 907.7], [1.55743422E12, 730.5], [1.55743014E12, 3518.400000000001], [1.55743236E12, 1021.4000000000001], [1.55743458E12, 768.1999999999998], [1.55743398E12, 782.4], [1.55743074E12, 1101.2], [1.55743296E12, 1062.2], [1.55743116E12, 1087.2], [1.55743338E12, 1189.2000000000005], [1.55743278E12, 834.0], [1.55743176E12, 875.4000000000001], [1.557435E12, 1282.4999999999995], [1.55743062E12, 974.1000000000001], [1.55743284E12, 1041.5], [1.55743506E12, 891.3], [1.55743344E12, 1279.0], [1.55743446E12, 1209.0], [1.55743122E12, 1324.0], [1.55743164E12, 986.6], [1.55743386E12, 1162.2], [1.55743326E12, 1305.3999999999999], [1.55743224E12, 2178.6], [1.5574314E12, 1170.8], [1.55743362E12, 1036.0], [1.55743302E12, 1050.4], [1.557432E12, 1034.7000000000005], [1.55743524E12, 939.7000000000005], [1.55743182E12, 1237.5], [1.5574302E12, 521.0], [1.55743464E12, 813.0], [1.55743404E12, 1124.9], [1.5574308E12, 807.0], [1.55743242E12, 1060.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.55743188E12, 1426.0], [1.5574341E12, 945.0], [1.5574335E12, 1253.0], [1.55743026E12, 547.0], [1.55743248E12, 1476.0], [1.55743068E12, 1171.0], [1.5574323E12, 1001.0], [1.55743512E12, 851.0], [1.55743128E12, 1088.0], [1.5574329E12, 1222.0], [1.55743452E12, 1873.0], [1.55743206E12, 1162.0], [1.55743044E12, 827.0], [1.55743488E12, 1096.0], [1.55743104E12, 1082.0], [1.55743266E12, 1178.0], [1.55743428E12, 1122.0], [1.55743086E12, 1119.0], [1.55743308E12, 1305.0], [1.55743368E12, 1412.0], [1.5574353E12, 1080.0], [1.5574347E12, 877.0], [1.55743146E12, 998.0], [1.55743092E12, 924.0], [1.55743254E12, 1372.0], [1.55743152E12, 1372.0], [1.55743314E12, 1254.0], [1.55743476E12, 916.0], [1.55743134E12, 1285.0], [1.55743416E12, 1056.0], [1.55743518E12, 2226.0], [1.55743194E12, 1320.0], [1.55743356E12, 1401.0], [1.55743032E12, 929.0], [1.5574311E12, 926.0], [1.55743392E12, 1331.0], [1.55743494E12, 1649.0], [1.5574317E12, 1016.0], [1.55743332E12, 1499.0], [1.55743212E12, 1049.0], [1.55743434E12, 972.0], [1.55743374E12, 1406.0], [1.5574305E12, 910.0], [1.55743272E12, 1157.0], [1.55743158E12, 1165.0], [1.5574344E12, 933.0], [1.5574338E12, 2201.0], [1.55743056E12, 939.0], [1.55743218E12, 1514.0], [1.55743038E12, 911.0], [1.5574326E12, 1250.0], [1.55743482E12, 813.0], [1.5574332E12, 1287.0], [1.55743098E12, 1011.0], [1.55743422E12, 812.0], [1.55743014E12, 3827.0], [1.55743236E12, 1196.0], [1.55743458E12, 933.0], [1.55743398E12, 1092.0], [1.55743074E12, 1140.0], [1.55743296E12, 1399.0], [1.55743116E12, 2252.0], [1.55743338E12, 1472.0], [1.55743278E12, 834.0], [1.55743176E12, 1007.0], [1.557435E12, 1411.0], [1.55743062E12, 1008.0], [1.55743284E12, 1194.0], [1.55743506E12, 910.0], [1.55743344E12, 1385.0], [1.55743446E12, 1304.0], [1.55743122E12, 1404.0], [1.55743164E12, 1033.0], [1.55743386E12, 1422.0], [1.55743326E12, 1785.0], [1.55743224E12, 2362.0], [1.5574314E12, 1349.0], [1.55743362E12, 1145.0], [1.55743302E12, 1986.0], [1.557432E12, 1249.0], [1.55743524E12, 1097.0], [1.55743182E12, 1434.0], [1.5574302E12, 521.0], [1.55743464E12, 867.0], [1.55743404E12, 1262.0], [1.5574308E12, 945.0], [1.55743242E12, 1219.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.55743188E12, 1369.0], [1.5574341E12, 932.0], [1.5574335E12, 1158.1], [1.55743026E12, 547.0], [1.55743248E12, 1227.5], [1.55743068E12, 1140.4499999999998], [1.5574323E12, 855.6499999999995], [1.55743512E12, 839.0], [1.55743128E12, 1087.7], [1.5574329E12, 1078.4999999999998], [1.55743452E12, 1274.2999999999997], [1.55743206E12, 1107.4999999999998], [1.55743044E12, 827.0], [1.55743488E12, 1085.8], [1.55743104E12, 1070.95], [1.55743266E12, 1133.0], [1.55743428E12, 1112.65], [1.55743086E12, 979.5], [1.55743308E12, 1094.3999999999999], [1.55743368E12, 1355.7], [1.5574353E12, 1080.0], [1.5574347E12, 872.8], [1.55743146E12, 986.3999999999999], [1.55743092E12, 915.3999999999999], [1.55743254E12, 1223.3999999999992], [1.55743152E12, 1302.1499999999999], [1.55743314E12, 1119.1999999999998], [1.55743476E12, 904.3], [1.55743134E12, 1276.6], [1.55743416E12, 1024.8], [1.55743518E12, 1460.1499999999987], [1.55743194E12, 1239.35], [1.55743356E12, 1381.5], [1.55743032E12, 929.0], [1.5574311E12, 924.2], [1.55743392E12, 1216.3999999999996], [1.55743494E12, 1635.8], [1.5574317E12, 1001.55], [1.55743332E12, 1426.3999999999999], [1.55743212E12, 1025.6], [1.55743434E12, 945.6999999999999], [1.55743374E12, 1379.25], [1.5574305E12, 910.0], [1.55743272E12, 1114.9999999999995], [1.55743158E12, 1143.8], [1.5574344E12, 918.9], [1.5574338E12, 966.65], [1.55743056E12, 935.5], [1.55743218E12, 1353.1000000000001], [1.55743038E12, 911.0], [1.5574326E12, 1140.3499999999997], [1.55743482E12, 804.75], [1.5574332E12, 1171.0], [1.55743098E12, 959.6499999999999], [1.55743422E12, 791.1], [1.55743014E12, 3827.0], [1.55743236E12, 1098.9], [1.55743458E12, 856.9999999999995], [1.55743398E12, 1031.5999999999992], [1.55743074E12, 1139.8], [1.55743296E12, 1136.1999999999998], [1.55743116E12, 1769.3999999999971], [1.55743338E12, 1344.3999999999999], [1.55743278E12, 834.0], [1.55743176E12, 951.4499999999999], [1.557435E12, 1392.5], [1.55743062E12, 1008.0], [1.55743284E12, 1116.75], [1.55743506E12, 904.05], [1.55743344E12, 1327.0], [1.55743446E12, 1259.5], [1.55743122E12, 1344.75], [1.55743164E12, 1011.8], [1.55743386E12, 1395.3], [1.55743326E12, 1552.0999999999992], [1.55743224E12, 2261.4], [1.5574314E12, 1304.0], [1.55743362E12, 1084.05], [1.55743302E12, 1185.15], [1.557432E12, 1146.1499999999999], [1.55743524E12, 1049.3999999999999], [1.55743182E12, 1343.0], [1.5574302E12, 521.0], [1.55743464E12, 858.5], [1.55743404E12, 1235.8999999999999], [1.5574308E12, 933.0], [1.55743242E12, 1156.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5574353E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 616.0, "minX": 1.0, "maxY": 1335.0, "series": [{"data": [[2.0, 755.5], [1.0, 616.0], [4.0, 1218.5], [5.0, 1335.0], [3.0, 910.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 616.0, "minX": 1.0, "maxY": 1335.0, "series": [{"data": [[2.0, 755.5], [1.0, 616.0], [4.0, 1218.5], [5.0, 1335.0], [3.0, 910.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.55743008E12, "maxY": 1.0666666666666667, "series": [{"data": [[1.55743188E12, 0.75], [1.5574341E12, 0.48333333333333334], [1.5574335E12, 0.9833333333333333], [1.55743026E12, 0.06666666666666667], [1.55743248E12, 0.8166666666666667], [1.55743068E12, 0.55], [1.5574323E12, 0.6333333333333333], [1.55743512E12, 0.5], [1.55743128E12, 0.4], [1.5574329E12, 0.75], [1.55743452E12, 0.6666666666666666], [1.55743206E12, 0.6666666666666666], [1.55743044E12, 0.2833333333333333], [1.55743488E12, 0.5166666666666667], [1.55743104E12, 0.5333333333333333], [1.55743266E12, 0.6], [1.55743428E12, 0.6333333333333333], [1.55743086E12, 0.55], [1.55743308E12, 0.9666666666666667], [1.55743368E12, 0.8666666666666667], [1.5574353E12, 0.06666666666666667], [1.5574347E12, 0.5166666666666667], [1.55743146E12, 0.7], [1.55743092E12, 0.8], [1.55743254E12, 0.7833333333333333], [1.55743152E12, 0.5], [1.55743314E12, 1.0], [1.55743476E12, 0.48333333333333334], [1.55743134E12, 0.55], [1.55743416E12, 0.7833333333333333], [1.55743518E12, 0.6], [1.55743194E12, 0.6833333333333333], [1.55743356E12, 0.8166666666666667], [1.55743032E12, 0.2], [1.5574311E12, 0.6333333333333333], [1.55743392E12, 0.9], [1.55743494E12, 0.5], [1.5574317E12, 0.6], [1.55743332E12, 0.9166666666666666], [1.55743008E12, 0.016666666666666666], [1.55743212E12, 0.5333333333333333], [1.55743434E12, 0.65], [1.55743374E12, 0.7666666666666667], [1.5574305E12, 0.2833333333333333], [1.55743272E12, 0.7666666666666667], [1.55743158E12, 0.7], [1.5574344E12, 0.6666666666666666], [1.5574338E12, 0.9666666666666667], [1.55743056E12, 0.43333333333333335], [1.55743218E12, 0.7166666666666667], [1.55743038E12, 0.23333333333333334], [1.5574326E12, 0.8], [1.55743482E12, 0.5333333333333333], [1.5574332E12, 0.8333333333333334], [1.55743098E12, 0.5166666666666667], [1.55743422E12, 0.4666666666666667], [1.55743014E12, 0.15], [1.55743236E12, 0.6833333333333333], [1.55743458E12, 0.6166666666666667], [1.55743398E12, 0.6666666666666666], [1.55743074E12, 0.6666666666666666], [1.55743296E12, 0.8], [1.55743116E12, 0.8166666666666667], [1.55743338E12, 0.6833333333333333], [1.55743278E12, 0.11666666666666667], [1.55743176E12, 0.5166666666666667], [1.557435E12, 0.6666666666666666], [1.55743062E12, 0.2], [1.55743284E12, 0.7333333333333333], [1.55743506E12, 0.6166666666666667], [1.55743344E12, 1.0], [1.55743446E12, 0.48333333333333334], [1.55743122E12, 0.7166666666666667], [1.55743164E12, 0.7333333333333333], [1.55743386E12, 0.8833333333333333], [1.55743326E12, 1.0666666666666667], [1.55743224E12, 0.85], [1.5574314E12, 0.6], [1.55743362E12, 0.9833333333333333], [1.55743302E12, 0.6833333333333333], [1.557432E12, 0.6], [1.55743524E12, 0.6], [1.55743182E12, 0.8833333333333333], [1.5574302E12, 0.13333333333333333], [1.55743464E12, 0.4666666666666667], [1.55743404E12, 0.7833333333333333], [1.5574308E12, 0.5], [1.55743242E12, 0.6166666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5574353E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.55743014E12, "maxY": 1.0833333333333333, "series": [{"data": [[1.55743188E12, 0.7333333333333333], [1.5574341E12, 0.48333333333333334], [1.5574335E12, 1.0], [1.55743026E12, 0.06666666666666667], [1.55743248E12, 0.8166666666666667], [1.55743068E12, 0.5333333333333333], [1.5574323E12, 0.6333333333333333], [1.55743512E12, 0.5166666666666667], [1.55743128E12, 0.4166666666666667], [1.5574329E12, 0.75], [1.55743452E12, 0.6666666666666666], [1.55743206E12, 0.6666666666666666], [1.55743044E12, 0.26666666666666666], [1.55743488E12, 0.5166666666666667], [1.55743104E12, 0.5333333333333333], [1.55743266E12, 0.6166666666666667], [1.55743428E12, 0.6], [1.55743086E12, 0.5666666666666667], [1.55743308E12, 0.9166666666666666], [1.55743368E12, 0.8833333333333333], [1.5574353E12, 0.06666666666666667], [1.5574347E12, 0.5166666666666667], [1.55743146E12, 0.7166666666666667], [1.55743092E12, 0.7833333333333333], [1.55743254E12, 0.7833333333333333], [1.55743152E12, 0.5], [1.55743314E12, 1.05], [1.55743476E12, 0.4666666666666667], [1.55743134E12, 0.5166666666666667], [1.55743416E12, 0.75], [1.55743518E12, 0.6], [1.55743194E12, 0.7], [1.55743356E12, 0.8166666666666667], [1.55743032E12, 0.2], [1.5574311E12, 0.6166666666666667], [1.55743392E12, 0.8833333333333333], [1.55743494E12, 0.5], [1.5574317E12, 0.6], [1.55743332E12, 0.9166666666666666], [1.55743212E12, 0.5333333333333333], [1.55743434E12, 0.6666666666666666], [1.55743374E12, 0.7333333333333333], [1.5574305E12, 0.3], [1.55743272E12, 0.7833333333333333], [1.55743158E12, 0.6833333333333333], [1.5574344E12, 0.6833333333333333], [1.5574338E12, 1.0], [1.55743056E12, 0.43333333333333335], [1.55743218E12, 0.7], [1.55743038E12, 0.23333333333333334], [1.5574326E12, 0.7666666666666667], [1.55743482E12, 0.5666666666666667], [1.5574332E12, 0.8166666666666667], [1.55743098E12, 0.5333333333333333], [1.55743422E12, 0.5], [1.55743014E12, 0.16666666666666666], [1.55743236E12, 0.6833333333333333], [1.55743458E12, 0.5833333333333334], [1.55743398E12, 0.6666666666666666], [1.55743074E12, 0.6833333333333333], [1.55743296E12, 0.7833333333333333], [1.55743116E12, 0.8], [1.55743338E12, 0.6833333333333333], [1.55743278E12, 0.11666666666666667], [1.55743176E12, 0.5], [1.557435E12, 0.6666666666666666], [1.55743062E12, 0.2], [1.55743284E12, 0.7333333333333333], [1.55743506E12, 0.6], [1.55743344E12, 0.9833333333333333], [1.55743446E12, 0.48333333333333334], [1.55743122E12, 0.7333333333333333], [1.55743164E12, 0.75], [1.55743386E12, 0.8833333333333333], [1.55743326E12, 1.0833333333333333], [1.55743224E12, 0.8666666666666667], [1.5574314E12, 0.6166666666666667], [1.55743362E12, 0.9666666666666667], [1.55743302E12, 0.7], [1.557432E12, 0.6], [1.55743524E12, 0.6], [1.55743182E12, 0.9], [1.5574302E12, 0.13333333333333333], [1.55743464E12, 0.48333333333333334], [1.55743404E12, 0.8], [1.5574308E12, 0.48333333333333334], [1.55743242E12, 0.6166666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5574353E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.55743014E12, "maxY": 0.7333333333333333, "series": [{"data": [[1.55743188E12, 0.26666666666666666], [1.5574341E12, 0.05], [1.5574335E12, 0.31666666666666665], [1.55743026E12, 0.03333333333333333], [1.55743248E12, 0.26666666666666666], [1.55743068E12, 0.26666666666666666], [1.5574323E12, 0.26666666666666666], [1.55743128E12, 0.18333333333333332], [1.5574329E12, 0.25], [1.55743206E12, 0.3], [1.55743044E12, 0.13333333333333333], [1.55743104E12, 0.25], [1.55743266E12, 0.2], [1.55743428E12, 0.08333333333333333], [1.55743086E12, 0.25], [1.55743308E12, 0.36666666666666664], [1.55743368E12, 0.3], [1.55743146E12, 0.31666666666666665], [1.55743092E12, 0.36666666666666664], [1.55743254E12, 0.31666666666666665], [1.55743152E12, 0.2], [1.55743314E12, 0.35], [1.55743134E12, 0.26666666666666666], [1.55743416E12, 0.1], [1.55743194E12, 0.3], [1.55743356E12, 0.25], [1.55743032E12, 0.1], [1.5574311E12, 0.2833333333333333], [1.55743392E12, 0.23333333333333334], [1.5574317E12, 0.23333333333333334], [1.55743332E12, 0.3], [1.55743212E12, 0.21666666666666667], [1.55743374E12, 0.18333333333333332], [1.5574305E12, 0.15], [1.55743272E12, 0.3], [1.55743158E12, 0.3], [1.5574338E12, 0.26666666666666666], [1.55743056E12, 0.21666666666666667], [1.55743218E12, 0.31666666666666665], [1.55743038E12, 0.11666666666666667], [1.5574326E12, 0.3], [1.5574332E12, 0.35], [1.55743098E12, 0.26666666666666666], [1.55743014E12, 0.08333333333333333], [1.55743236E12, 0.2833333333333333], [1.55743398E12, 0.13333333333333333], [1.55743074E12, 0.31666666666666665], [1.55743296E12, 0.26666666666666666], [1.55743116E12, 0.38333333333333336], [1.55743338E12, 0.18333333333333332], [1.55743278E12, 0.03333333333333333], [1.55743176E12, 0.23333333333333334], [1.55743062E12, 0.1], [1.55743284E12, 0.26666666666666666], [1.55743344E12, 0.2833333333333333], [1.55743122E12, 0.35], [1.55743164E12, 0.3333333333333333], [1.55743386E12, 0.18333333333333332], [1.55743326E12, 0.36666666666666664], [1.55743224E12, 0.3333333333333333], [1.5574314E12, 0.25], [1.55743362E12, 0.3], [1.55743302E12, 0.25], [1.557432E12, 0.23333333333333334], [1.55743182E12, 0.38333333333333336], [1.5574302E12, 0.06666666666666667], [1.55743404E12, 0.16666666666666666], [1.5574308E12, 0.23333333333333334], [1.55743242E12, 0.26666666666666666]], "isOverall": false, "label": "sign in-success", "isController": false}, {"data": [[1.55743188E12, 0.4666666666666667], [1.5574341E12, 0.43333333333333335], [1.5574335E12, 0.6833333333333333], [1.55743026E12, 0.03333333333333333], [1.55743248E12, 0.55], [1.55743068E12, 0.26666666666666666], [1.5574323E12, 0.36666666666666664], [1.55743512E12, 0.5166666666666667], [1.55743128E12, 0.23333333333333334], [1.5574329E12, 0.5], [1.55743452E12, 0.6666666666666666], [1.55743206E12, 0.36666666666666664], [1.55743044E12, 0.13333333333333333], [1.55743488E12, 0.5166666666666667], [1.55743104E12, 0.2833333333333333], [1.55743266E12, 0.4166666666666667], [1.55743428E12, 0.5166666666666667], [1.55743086E12, 0.31666666666666665], [1.55743308E12, 0.55], [1.55743368E12, 0.5833333333333334], [1.5574353E12, 0.06666666666666667], [1.5574347E12, 0.5166666666666667], [1.55743146E12, 0.4], [1.55743092E12, 0.4166666666666667], [1.55743254E12, 0.4666666666666667], [1.55743152E12, 0.3], [1.55743314E12, 0.7], [1.55743476E12, 0.4666666666666667], [1.55743134E12, 0.25], [1.55743416E12, 0.65], [1.55743518E12, 0.6], [1.55743194E12, 0.4], [1.55743356E12, 0.5666666666666667], [1.55743032E12, 0.1], [1.5574311E12, 0.3333333333333333], [1.55743392E12, 0.65], [1.55743494E12, 0.5], [1.5574317E12, 0.36666666666666664], [1.55743332E12, 0.6166666666666667], [1.55743212E12, 0.31666666666666665], [1.55743434E12, 0.6666666666666666], [1.55743374E12, 0.55], [1.5574305E12, 0.15], [1.55743272E12, 0.48333333333333334], [1.55743158E12, 0.38333333333333336], [1.5574344E12, 0.6833333333333333], [1.5574338E12, 0.7333333333333333], [1.55743056E12, 0.21666666666666667], [1.55743218E12, 0.38333333333333336], [1.55743038E12, 0.11666666666666667], [1.5574326E12, 0.4666666666666667], [1.55743482E12, 0.5666666666666667], [1.5574332E12, 0.4666666666666667], [1.55743098E12, 0.26666666666666666], [1.55743422E12, 0.5], [1.55743014E12, 0.08333333333333333], [1.55743236E12, 0.4], [1.55743458E12, 0.5833333333333334], [1.55743398E12, 0.5333333333333333], [1.55743074E12, 0.36666666666666664], [1.55743296E12, 0.5166666666666667], [1.55743116E12, 0.4166666666666667], [1.55743338E12, 0.5], [1.55743278E12, 0.08333333333333333], [1.55743176E12, 0.26666666666666666], [1.557435E12, 0.6666666666666666], [1.55743062E12, 0.1], [1.55743284E12, 0.4666666666666667], [1.55743506E12, 0.6], [1.55743344E12, 0.7], [1.55743446E12, 0.48333333333333334], [1.55743122E12, 0.38333333333333336], [1.55743164E12, 0.4166666666666667], [1.55743386E12, 0.7], [1.55743326E12, 0.7166666666666667], [1.55743224E12, 0.5333333333333333], [1.5574314E12, 0.36666666666666664], [1.55743362E12, 0.6666666666666666], [1.55743302E12, 0.45], [1.557432E12, 0.36666666666666664], [1.55743524E12, 0.6], [1.55743182E12, 0.5166666666666667], [1.5574302E12, 0.06666666666666667], [1.55743464E12, 0.48333333333333334], [1.55743404E12, 0.6333333333333333], [1.5574308E12, 0.25], [1.55743242E12, 0.35]], "isOverall": false, "label": "store data-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5574353E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.55743014E12, "maxY": 1.0833333333333333, "series": [{"data": [[1.55743188E12, 0.7333333333333333], [1.5574341E12, 0.48333333333333334], [1.5574335E12, 1.0], [1.55743026E12, 0.06666666666666667], [1.55743248E12, 0.8166666666666667], [1.55743068E12, 0.5333333333333333], [1.5574323E12, 0.6333333333333333], [1.55743512E12, 0.5166666666666667], [1.55743128E12, 0.4166666666666667], [1.5574329E12, 0.75], [1.55743452E12, 0.6666666666666666], [1.55743206E12, 0.6666666666666666], [1.55743044E12, 0.26666666666666666], [1.55743488E12, 0.5166666666666667], [1.55743104E12, 0.5333333333333333], [1.55743266E12, 0.6166666666666667], [1.55743428E12, 0.6], [1.55743086E12, 0.5666666666666667], [1.55743308E12, 0.9166666666666666], [1.55743368E12, 0.8833333333333333], [1.5574353E12, 0.06666666666666667], [1.5574347E12, 0.5166666666666667], [1.55743146E12, 0.7166666666666667], [1.55743092E12, 0.7833333333333333], [1.55743254E12, 0.7833333333333333], [1.55743152E12, 0.5], [1.55743314E12, 1.05], [1.55743476E12, 0.4666666666666667], [1.55743134E12, 0.5166666666666667], [1.55743416E12, 0.75], [1.55743518E12, 0.6], [1.55743194E12, 0.7], [1.55743356E12, 0.8166666666666667], [1.55743032E12, 0.2], [1.5574311E12, 0.6166666666666667], [1.55743392E12, 0.8833333333333333], [1.55743494E12, 0.5], [1.5574317E12, 0.6], [1.55743332E12, 0.9166666666666666], [1.55743212E12, 0.5333333333333333], [1.55743434E12, 0.6666666666666666], [1.55743374E12, 0.7333333333333333], [1.5574305E12, 0.3], [1.55743272E12, 0.7833333333333333], [1.55743158E12, 0.6833333333333333], [1.5574344E12, 0.6833333333333333], [1.5574338E12, 1.0], [1.55743056E12, 0.43333333333333335], [1.55743218E12, 0.7], [1.55743038E12, 0.23333333333333334], [1.5574326E12, 0.7666666666666667], [1.55743482E12, 0.5666666666666667], [1.5574332E12, 0.8166666666666667], [1.55743098E12, 0.5333333333333333], [1.55743422E12, 0.5], [1.55743014E12, 0.16666666666666666], [1.55743236E12, 0.6833333333333333], [1.55743458E12, 0.5833333333333334], [1.55743398E12, 0.6666666666666666], [1.55743074E12, 0.6833333333333333], [1.55743296E12, 0.7833333333333333], [1.55743116E12, 0.8], [1.55743338E12, 0.6833333333333333], [1.55743278E12, 0.11666666666666667], [1.55743176E12, 0.5], [1.557435E12, 0.6666666666666666], [1.55743062E12, 0.2], [1.55743284E12, 0.7333333333333333], [1.55743506E12, 0.6], [1.55743344E12, 0.9833333333333333], [1.55743446E12, 0.48333333333333334], [1.55743122E12, 0.7333333333333333], [1.55743164E12, 0.75], [1.55743386E12, 0.8833333333333333], [1.55743326E12, 1.0833333333333333], [1.55743224E12, 0.8666666666666667], [1.5574314E12, 0.6166666666666667], [1.55743362E12, 0.9666666666666667], [1.55743302E12, 0.7], [1.557432E12, 0.6], [1.55743524E12, 0.6], [1.55743182E12, 0.9], [1.5574302E12, 0.13333333333333333], [1.55743464E12, 0.48333333333333334], [1.55743404E12, 0.8], [1.5574308E12, 0.48333333333333334], [1.55743242E12, 0.6166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5574353E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

